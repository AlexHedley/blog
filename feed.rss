<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
	<channel>
		<title />
		<link>https://alexhedley.github.io/blog</link>
		<description />
		<copyright>Copyright © 2023</copyright>
		<pubDate>Thu, 25 May 2023 16:21:13 GMT</pubDate>
		<lastBuildDate>Thu, 25 May 2023 16:21:13 GMT</lastBuildDate>
		<item>
			<title>Goals for 2018</title>
			<link>https://alexhedley.github.io/blog/posts/goals-for-2018</link>
			<description>&lt;p&gt;&lt;strong&gt;Xamarin&lt;/strong&gt;&lt;/p&gt;</description>
			<author>AlexHedley</author>
			<guid>https://alexhedley.github.io/blog/posts/goals-for-2018</guid>
			<pubDate>Wed, 27 Dec 2017 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;&lt;strong&gt;Xamarin&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I'd started some training last year but didn't make any useful apps, I'd like to progress this to a production one in 2018.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;.NET&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I'd like to make progress in either or both of my Tracking app ideas.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;599CD&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Actually release it, I've been holding off hoping the API will be re-written, maybe I should just release, then update when it is.&lt;/p&gt;
&lt;p&gt;Although releasing the Android at the same time would be nice.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Certs&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;MS: Programming in HTML5 with JavaScript and CSS3&lt;/p&gt;
&lt;p&gt;MCSA: Web Applications&lt;/p&gt;
&lt;p&gt;MCPS: Developing ASP.NET MVC Web Applications&lt;/p&gt;
&lt;p&gt;Microsoft Certified Solution Developer: App Builder&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/images/wordpress.png" alt="Wordpress" title="Wordpress"&gt; &lt;a href="https://alexhedley.wordpress.com/2017/12/27/goals-for-2018/"&gt;Original Link&lt;/a&gt;&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>Goals for 2017 – Review</title>
			<link>https://alexhedley.github.io/blog/posts/goals-for-2017-review</link>
			<description>&lt;p&gt;&lt;strong&gt;599CD&lt;/strong&gt;&lt;/p&gt;</description>
			<author>AlexHedley</author>
			<guid>https://alexhedley.github.io/blog/posts/goals-for-2017-review</guid>
			<pubDate>Wed, 27 Dec 2017 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;&lt;strong&gt;599CD&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;iOS
&lt;ul&gt;
&lt;li&gt;Re-wrote API interaction using the Facade pattern&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Android
&lt;ul&gt;
&lt;li&gt;Asked a friend to help write this&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Still waiting on Rich to make a proper API.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Jam Jar&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Worked with PassSlot and have a local iOS app that creates them, with images&lt;/p&gt;
&lt;p&gt;&lt;a href="https://alexhedley.wordpress.com/2017/05/20/jam-jar-cinema-wallet-passes/"&gt;https://alexhedley.wordpress.com/2017/05/20/jam-jar-cinema-wallet-passes/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;.NET Apps&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I worked a little on a GNVQ tracking app for Learning Objectives, the back end is mostly there, still working on the UI.&lt;/p&gt;
&lt;p&gt;In general I was working on a major iOS project at work so didn't have a massive amount of spare time, learned lots of new APIs and techniques in ObjC and iOS dev which was great.&lt;/p&gt;
&lt;p&gt;Previous&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://alexhedley.wordpress.com/2017/01/02/goals-for-2017/"&gt;https://alexhedley.wordpress.com/2017/01/02/goals-for-2017/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://alexhedley.wordpress.com/2017/01/02/goals-for-2016-review/"&gt;https://alexhedley.wordpress.com/2017/01/02/goals-for-2016-review/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://alexhedley.wordpress.com/2016/01/01/goals-for-2016/"&gt;https://alexhedley.wordpress.com/2016/01/01/goals-for-2016/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/images/wordpress.png" alt="Wordpress" title="Wordpress"&gt; &lt;a href="https://alexhedley.wordpress.com/2017/12/27/goals-for-2017-review/"&gt;Original Link&lt;/a&gt;&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>UIBarButtonItem Image and Text</title>
			<link>https://alexhedley.github.io/blog/posts/uibarbuttonitem-image-and-text</link>
			<description>&lt;p&gt;I want to add an image and text to a BarButtonItem but can't in IB.&lt;/p&gt;</description>
			<author>AlexHedley</author>
			<guid>https://alexhedley.github.io/blog/posts/uibarbuttonitem-image-and-text</guid>
			<pubDate>Thu, 21 Sep 2017 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;I want to add an image and text to a BarButtonItem but can't in IB.&lt;/p&gt;
&lt;p&gt;I looked into&amp;nbsp;EdgeInsets but couldn't get them to work with the image.&lt;/p&gt;
&lt;p&gt;I'd also like to shrink the image&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;// https://stackoverflow.com/a/18853240/2895831
UIView \*rightButtonView = \[\[UIView alloc\]initWithFrame:CGRectMake(0, 0, 110, 50)\];

UIImage \*buttonImage = \[UIImage imageNamed:@"LocationArrow"\];
//UIEdgeInsets edgeInsets = UIEdgeInsetsMake(50, 50, 50, 50);
//UIImage \*buttonImage = \[\[UIImage imageNamed:@"LocationArrow"\] resizableImageWithCapInsets:edgeInsets\];
//UIImage(CGImage: originalImage!.CGImage!, scale: 5, orientation: originalImage!.imageOrientation)
// https://stackoverflow.com/a/38523085/2895831
buttonImage = \[UIImage imageWithCGImage:buttonImage.CGImage
 scale:4//CGImageGetHeight(buttonImage.CGImage)/2
 orientation:UIImageOrientationUp\];

UIButton \*rightButton = \[UIButton buttonWithType:UIButtonTypeSystem\];
rightButton.backgroundColor = \[UIColor clearColor\];
rightButton.frame = rightButtonView.frame;
\[rightButton setImage:buttonImage forState:UIControlStateNormal\];
\[rightButton setTitle:NSLocalizedString(@"My Location", nil) forState:UIControlStateNormal\];
rightButton.tintColor = \[UIColor whiteColor\];
rightButton.autoresizesSubviews = YES;
rightButton.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleLeftMargin;
rightButton.semanticContentAttribute = UISemanticContentAttributeForceRightToLeft;
\[rightButton addTarget:self action:@selector(myLocationAction:) forControlEvents:UIControlEventTouchUpInside\];

CGFloat padding = 10.0f;
\[rightButton setTitleEdgeInsets:UIEdgeInsetsMake(0, 0, 0, padding)\];
//\[rightButton setContentEdgeInsets:UIEdgeInsetsMake(0, 0, 0, padding)\];
//\[rightButton setContentEdgeInsets:UIEdgeInsetsMake(padding, padding, padding, padding)\];
//\[rightButton setImageEdgeInsets:UIEdgeInsetsMake(padding, 0, padding, 0)\]; //0, padding, 0, padding
//\[rightButton setImageEdgeInsets:UIEdgeInsetsMake(padding, padding, padding, padding)\];

\[rightButtonView addSubview:rightButton\];

UIBarButtonItem \*rightBarButton = \[\[UIBarButtonItem alloc\] initWithCustomView:rightButtonView\];
self.navigationItem.rightBarButtonItem = rightBarButton;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Image&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/a/38523085/2895831"&gt;https://stackoverflow.com/a/38523085/2895831&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;[UIImage imageWithCGImage:buttonImage.CGImage&amp;nbsp;scale:4&amp;nbsp;orientation:UIImageOrientationUp];
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pick your method to scale&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;CGImageGetHeight(buttonImage.CGImage)/2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;CGImageGetWidth(...)/DESIREDWIDTH
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;IB&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There is the handy&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bar Item&lt;/li&gt;
&lt;li&gt;Image Inset&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/images/wordpress.png" alt="Wordpress" title="Wordpress"&gt; &lt;a href="https://alexhedley.wordpress.com/2017/09/21/uibarbuttonitem-image-and-text/"&gt;Original Link&lt;/a&gt;&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>UIButton VerticalLayout</title>
			<link>https://alexhedley.github.io/blog/posts/uibutton-verticallayout</link>
			<description>&lt;p&gt;&lt;a href="https://stackoverflow.com/a/22621613/2895831"&gt;https://stackoverflow.com/a/22621613/2895831&lt;/a&gt;&lt;/p&gt;</description>
			<author>AlexHedley</author>
			<guid>https://alexhedley.github.io/blog/posts/uibutton-verticallayout</guid>
			<pubDate>Fri, 04 Aug 2017 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;&lt;a href="https://stackoverflow.com/a/22621613/2895831"&gt;https://stackoverflow.com/a/22621613/2895831&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[gist 87d1917da7745da9cd77033508e69243 /]&lt;/p&gt;
&lt;p&gt;&lt;code&gt;UIButton+VerticalLayout.m&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;//https://stackoverflow.com/a/22621613/2895831

@interface UIButton (VerticalLayout)  

- (void)centerVerticallyWithPadding:(float)padding;  
- (void)centerVertically;  

@end  

@implementation UIButton (VerticalLayout)  

- (void)centerVerticallyWithPadding:(float)padding {      
    CGSize imageSize = self.imageView.frame.size;  
    CGSize titleSize = self.titleLabel.frame.size;  
    CGFloat totalHeight = (imageSize.height + titleSize.height + padding);  
    self.imageEdgeInsets = UIEdgeInsetsMake(- (totalHeight - imageSize.height),
                                            0.0f,
                                            0.0f,
                                            - titleSize.width);
    self.titleEdgeInsets = UIEdgeInsetsMake(0.0f,
                                            - imageSize.width,
                                            - (totalHeight - titleSize.height),
                                            0.0f);
//     self.contentEdgeInsets = UIEdgeInsetsMake(0.0f,
//                                             0.0f,
//                                             titleSize.height,
//                                             0.0f);
    CGFloat inset = (self.frame.size.height - totalHeight)/2;
    self.contentEdgeInsets = UIEdgeInsetsMake(inset, 0.0f, inset, 0.0f);
}

- (void)centerVertically {  
    const CGFloat kDefaultPadding = 6.0f;
    [self centerVerticallyWithPadding:kDefaultPadding];  
}
@end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I added some buttons into a UIStackView but the image overlaps the button.&lt;/p&gt;
&lt;p&gt;[gallery ids="1046,1047" type="rectangular"]&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/verticalbutton-1.png" alt=""&gt;
&lt;img src="https://alexhedley.github.io/blog/images/verticalbutton-2.png" alt=""&gt;&lt;/p&gt;
&lt;p&gt;I modified the &lt;em&gt;contentEdgeInsets&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;CGFloat inset = (self.frame.size.height - totalHeight)/2;
self.contentEdgeInsets = UIEdgeInsetsMake(inset, 0.0f, inset, 0.0f);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/images/wordpress.png" alt="Wordpress" title="Wordpress"&gt; &lt;a href="https://alexhedley.wordpress.com/2017/08/04/uibutton-verticallayout/"&gt;Original Link&lt;/a&gt;&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>Pollen Today Widget</title>
			<link>https://alexhedley.github.io/blog/posts/pollen-today-widget</link>
			<description>&lt;p&gt;I want a today Widget to show pollen count.&lt;/p&gt;</description>
			<author>AlexHedley</author>
			<guid>https://alexhedley.github.io/blog/posts/pollen-today-widget</guid>
			<pubDate>Sun, 09 Jul 2017 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;I want a today Widget to show pollen count.&lt;/p&gt;
&lt;p&gt;I downloaded:&lt;/p&gt;
&lt;p&gt;Clarityn’s Pollen Forecast UK by Bayer HealthCare AG&lt;/p&gt;
&lt;p&gt;&lt;a href="https://appsto.re/gb/tPFfw.i"&gt;https://appsto.re/gb/tPFfw.i&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;They have a website&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.claritynallergy.co.uk/allergyforecast/?zip=X"&gt;http://www.claritynallergy.co.uk/allergyforecast/?zip=X&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It doesn't have the Widget I wanted so I started looking for an API.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;POST&lt;/strong&gt;&amp;nbsp;http://www.claritynallergy.co.uk/webservice/allergyforecast.php&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Header&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Accept: application/json&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Body&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Form URL-Encoded&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;zip=NE11EE&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Response&lt;/p&gt;
&lt;p&gt;&lt;code&gt;"{\\"Durham &amp;amp; Newcastle\\":{\\"1499515201\\":{\\"precipitation\\":8,\\"maxTemp\\":21,\\"minTemp\\":16,\\"pollenLevel\\":\\"H\\",\\"humidity\\":83,\\"windSpeed\\":7,\\"weatherCode\\":7,\\"uvIndex\\":5,\\"pollenType\\":\\"Grass\\"},\\"1499601600\\":{\\"precipitation\\":18,\\"maxTemp\\":18,\\"minTemp\\":15,\\"pollenLevel\\":\\"H\\",\\"humidity\\":80,\\"windSpeed\\":18,\\"weatherCode\\":7,\\"uvIndex\\":4,\\"pollenType\\":\\"Grass\\"},\\"1499688000\\":{\\"precipitation\\":23,\\"maxTemp\\":18,\\"minTemp\\":14,\\"pollenLevel\\":\\"M\\",\\"humidity\\":69,\\"windSpeed\\":11,\\"weatherCode\\":3,\\"uvIndex\\":7,\\"pollenType\\":\\"Grass\\"}}}"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Images&lt;/p&gt;
&lt;p&gt;"http://www.claritynallergy.co.uk/static/media/images/claritynallergy/7-trans.png" :&lt;img src="https://alexhedley.github.io/blog/images/3-trans.png" alt=""&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I found Benadryl has one.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.benadryl.co.uk/social-pollen-count"&gt;https://www.benadryl.co.uk/social-pollen-count&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;GET&lt;/strong&gt; &lt;a href="https://socialpollencount.co.uk/api/forecast?location=%5C%5B**LAT**,**LON**%5C%5D"&gt;https://socialpollencount.co.uk/api/forecast?location=\[**LAT**,**LON**\]&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Response&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{"status\_code":"200 OK","date":"2017-07-02T07:13:47+00:00","forecast":\[{"date":"2017-06-29T08:00:01+00:00","pollen\_count":"Low"},{"date":"2017-06-30T08:00:01+00:00","pollen\_count":"Low"},{"date":"2017-07-01T08:00:01+00:00","pollen\_count":"High"},{"date":"2017-07-02T08:00:01+00:00","pollen\_count":"High","temperature":"18","weather\_code":"01","weather":"Sunny"},{"date":"2017-07-03T08:00:01+00:00","pollen\_count":"High","temperature":"18","weather\_code":"07","weather":"Medium-level cloud"},{"date":"2017-07-04T08:00:01+00:00","pollen\_count":"Moderate","temperature":"14","weather\_code":"12","weather":"Light rain"}\]}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Images&lt;/p&gt;
&lt;p&gt;"https://socialpollencount.co.uk/images/content/weather/07.pnp" :&lt;img src="https://alexhedley.github.io/blog/images/07.png" alt=""&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;App: &lt;a href="https://itunes.apple.com/gb/app/benadryl-social-pollen-count/id638068252?mt=8"&gt;https://itunes.apple.com/gb/app/benadryl-social-pollen-count/id638068252?mt=8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;App doesn't exist.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Progress I've started building my own&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/img_4314.png" alt=""&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/img_4315-1.png" alt=""&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/img_4317.jpg" alt=""&gt;&lt;/p&gt;
&lt;p&gt;The Widget needs a lot of work but the basis is there, I've built a framework that gets all the data. Now to finish the UI...&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/images/wordpress.png" alt="Wordpress" title="Wordpress"&gt; &lt;a href="https://alexhedley.wordpress.com/2017/07/09/pollen-today-widget/"&gt;Original Link&lt;/a&gt;&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>Carousel View</title>
			<link>https://alexhedley.github.io/blog/posts/carousel-view</link>
			<description>&lt;p&gt;&lt;strong&gt;iCarousel&lt;/strong&gt;&lt;/p&gt;</description>
			<author>AlexHedley</author>
			<guid>https://alexhedley.github.io/blog/posts/carousel-view</guid>
			<pubDate>Mon, 22 May 2017 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;&lt;strong&gt;iCarousel&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nicklockwood/iCarousel"&gt;https://github.com/nicklockwood/iCarousel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I wanted to add an animation when dismissing, a button at the top and bottom of the view, one to dismiss, one to save, and move off in that direction.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/AlexHedley/c551b417c3e02820a1eae04124003ee6"&gt;https://gist.github.com/AlexHedley/c551b417c3e02820a1eae04124003ee6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;iCarousel.m&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;- (void)removeItemAtIndex:(NSInteger)index animated:(BOOL)animated {
  //Amended method below to slide Up/Down
}

- (void)saveItemAtIndex:(NSInteger)index animated:(BOOL)animated {
    index = [self clampedIndex:index];
    UIView *itemView = [self itemViewAtIndex:index];

    [UIView beginAnimations:nil context:nil];
    [UIView setAnimationDuration:1.0];
    [UIView setAnimationDelegate:itemView.superview];
    [UIView setAnimationDidStopSelector:@selector(removeFromSuperview)];
    [self performSelector:@selector(queueItemView:) withObject:itemView afterDelay:0.1];
    itemView.superview.layer.opacity = 0.0;
    itemView.frame = CGRectOffset(itemView.frame, 0, 250); //Swap to -250 to change direction
    [UIView commitAnimations];

    [UIView beginAnimations:nil context:nil];
    [UIView setAnimationDelay:0.1];
    [UIView setAnimationDuration:INSERT_DURATION];
    [UIView setAnimationDelegate:self];
    [UIView setAnimationDidStopSelector:@selector(depthSortViews)];
    [self removeViewAtIndex:index];
    _numberOfItems --;
    _wrapEnabled = !![self valueForOption:iCarouselOptionWrap withDefault:_wrapEnabled];
    [self updateNumberOfVisibleItems];
    _scrollOffset = self.currentItemIndex;
    [self didScroll];
    [UIView commitAnimations];
}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/AlexHedley/528148bf47b634fda5fb007e4a5d9638"&gt;https://gist.github.com/AlexHedley/528148bf47b634fda5fb007e4a5d9638&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;TinderSimpleSwipeCards - &lt;a href="https://github.com/cwRichardKim/TinderSimpleSwipeCards/issues/12"&gt;https://github.com/cwRichardKim/TinderSimpleSwipeCards/issues/12&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;CardView.h&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;#import &amp;lt;UIKit/UIKit.h&amp;gt;


@protocol CardDelegate;

typedef NS_ENUM(NSUInteger, kCardState) {
    kCardStateIdle = 0,
    kCardStateMoving = 1,
    kCardStateGone = 2
};

// The Position of the Card
typedef NS_ENUM(NSInteger, kCardPosition) {
    kCardPositionTop = 0,
    kCardPositionBack = 1
};

/*!
 *    Implements the Views inside the Cards
 */
@interface CardView : UIView

#pragma mark - Properties

/*!
 *    Defines the current state of the card
 */
@property (nonatomic) kCardState state;

/*!
 *    The Weight of the Card indicates its position in the stack
 */
@property (nonatomic) kCardPosition position;

/*!
 * The delegate that will listen to the notifications
 * on created on pan gesture recognizers
 */
@property (nonatomic, weak) id &amp;lt;CardDelegate&amp;gt; delegate;

/*!
 *    Where in the array is located the  view
 */
@property (nonatomic) NSInteger index;

#pragma mark - Methods

#pragma mark Init

/*!
 * Designated Initializer
 *
 * This method inits the view
 * and set the  to fetch
 * also renders the view with 's data
 *
 * @param CGRect frame for view's bounds
 * @param ViewDelegate delegate to send events
 * @param  *  to render the view info
 */
- (void) setFrame:(CGRect)frame delegate:(id&amp;lt;CardDelegate&amp;gt;) delegate;

#pragma mark Instance

/*!
 * Swipes the view to the left
 * programatically
 */
- (void) swipeLeft;

/*!
 * Swipes the view to the right
 * programatically
 */
- (void) swipeRight;

/*!
 * Swipes the view up
 * programatically
 */
- (void) swipeUp;

/*!
 * Swipes the view down
 * programatically
 */
- (void) swipeDown;

/*!
 *    Cancels a Swipe
 */
- (void) cancelSwipe;

@end


@protocol CardDelegate &amp;lt;NSObject&amp;gt;

#pragma mark - Delegate Methods

/*!
 * Method called when the view will begin pan gesture
 * @param Card * Card
 */
- (void) willBeginSwipeInCard : (CardView *) card;

/*!
 * Method called when the view did end pan gesture
 * @param Card * Card
 */
- (void) didEndSwipeInCard : (CardView *) card;

/*!
 * Method called when the view did not reach a detected position
 * @param Card * Card
 */
- (void) didCancelSwipeInCard : (CardView *) card;

/*!
 * Method called when the view was swiped left
 * @param Card * Card
 */
- (void) swipedLeftInCard : (CardView *) card;

/*!
 * Method called when the view was swiped right
 * @param Card * Card
 */
- (void) swipedRightInCard : (CardView *) card;

/*!
 * Method called when the view was swiped up
 * @param Card * Card
 */
- (void) swipedUpInCard : (CardView *) card;

/*!
 * Method called when the view was swiped down
 * @param Card * Card
 */
- (void) swipedDownInCard : (CardView *) card;

/*!
 * Method called when the view button was pressed
 * @param Card * Card;
 */
- (void) wasTouchedDownInCard : (CardView *) card;

/*!
 *    Method called when the state was changed
 *
 *    @param  Card * Card;
 */
- (void) didChangeStateInCard: (CardView *) card;

/*!
 *    Ask the delegate if the card should move
 *
 *    @param Card the card
 *
 *    @return YES if the card should move
 */
- (BOOL) shouldMoveCard: (CardView *) card;

@end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;CardView.m&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;#import "CardView.h"

// Constants Declaration

// This constant represent the distance from the center
// where the action applies. A higher value means that
// the user needs to draw the view further in order for
// the action to be executed.

#define ACTION_MARGIN 120

// This constant is the distance from the center. But vertically

#define Y_ACTION_MARGIN 100


// This constant represent how quickly the view shrinks.
// The view will shrink when is beign moved out the visible
// area.
// A Higher value means slower shrinking

#define SCALE_QUICKNESS 4

// This constant represent how much the view shrinks.
// A Higher value means less shrinking

#define SCALE_MAX .93

// This constant represent the rotation angle

#define ROTATION_ANGLE M_PI / 8

// This constant represent the maximum rotation angle
// allowed in radiands.
// A higher value enables more rotation for the view

#define ROTATION_MAX 1

// This constant defines how fast
// the rotation should be.
// A higher values means a faster rotation.

#define ROTATION_QUICKNESS 320

@interface CardView()

// Internal Variables
@property (nonatomic) CGFloat xFromCenter;

@property (nonatomic) CGFloat yFromCenter;

@property (nonatomic) CGPoint originalPoint;

@end

@implementation CardView

@synthesize state = _state;

- (kCardState) state {
    if (!_state) {
        _state = kCardStateIdle;
    }

    return _state;
}

- (void) setState:(kCardState) state {

    if (_state != state) {
        _state = state;
        [self.delegate didChangeStateInCard:self];
    }
}

- (kCardPosition) position {
    if (!_position) {
        _position = kCardPositionTop;
    }

    return _position;
}

#pragma mark - Init

/*!
 * Designated Initializer
 *
 * This method inits the view
 * and set the feed to fetch
 * also renders the view with feed's data
 *
 * @param CGRect frame for view's bounds
 * @param CardDelegate delegate to send events
 */

- (void) setFrame:(CGRect)frame delegate:(id&amp;lt;CardDelegate&amp;gt;) delegate {

    self.frame = frame;

    self.delegate = delegate;

    [self setupView];
    [self registerSwipeGestures];
}

#pragma mark Init Helper Methods

/*!
 * Round corners of the view
 * and draw a shadow
 * Do another view related
 * actions required on init
 */
- (void) setupView {

    // Draw Shadow
    // And round the view
    self.layer.cornerRadius = 10;
    self.layer.shadowRadius = 3;
    self.layer.shadowOpacity = 0.2;
    self.layer.shadowOffset = CGSizeMake(1,1);

}

/*!
 * Register Pan Gesture
 * and delegates
 */
- (void) registerSwipeGestures {

    UIPanGestureRecognizer * panRecognizer = [[UIPanGestureRecognizer alloc] initWithTarget:self action:@selector(handlePanGesture:)];

    [self addGestureRecognizer:panRecognizer];

}


#pragma mark Pan Gesture Recognizer Handlers

/*!
 * This is the main method for motion detection
 * its called several times a second when the
 * fingers are moved across the screen.
 */
- (void) handlePanGesture: (UIPanGestureRecognizer *) panRecognizer {

    // This extracts the coordinate data from the swipe movement.
    // how much did fingers move.

    // We need to know the X position.
    // A positive value means movement to the right.
    // A negative value means movement to the left.

    self.xFromCenter = [panRecognizer translationInView:self].x;

    // We need to know the Y position.
    // A positive value means up movement.
    // A negative value means down movement.

    self.yFromCenter = [panRecognizer translationInView:self].y;

    // Now we check on wich state our swipe is
    // if is its starting, in the middle or ended
    // the swiping.

    switch (panRecognizer.state) {

            // Swiping just started
        case UIGestureRecognizerStateBegan: {

            // We will save the original point
            // when we started
            self.originalPoint = self.center;

            if (self.delegate) {

                if ([self.delegate shouldMoveCard:self]) {

                    // And tell the delegate
                    // that the movement just started
                    [self.delegate willBeginSwipeInCard:self];

                }

            }


            break;
        }

            // Swiping is in course
        case UIGestureRecognizerStateChanged: {

            // Animate the view

            if (self.delegate) {

                // If delegate is present
                // ask if it should move the card
                if ([self.delegate shouldMoveCard:self]) {

                    [self animateView];
                }

            } else {
                [self animateView];
            }

            break;
        }

        // Swiping ended
        case UIGestureRecognizerStateEnded: {

            if (self.delegate) {

                if ([self.delegate shouldMoveCard:self]) {

                    [self detectSwipeDirection];
                }

            } else {
                [self detectSwipeDirection];
            }

            break;
        }

        default:
            break;
    }
}


#pragma mark Helper Methods

/*!
 * Rotates the view
 * and changes its scale and position
 */
- (void) animateView {

    // Do some black magic math
    // for rotating and scale

    // Gets the rotation quickness
    // see constants.

    CGFloat rotationQuickness = MIN(self.xFromCenter / ROTATION_QUICKNESS, ROTATION_MAX);

    // Change the rotation in radians
    CGFloat rotationAngle = (CGFloat) (ROTATION_ANGLE * rotationQuickness);

    // the height will change when the view reaches certain point
    CGFloat scale = MAX(1 - fabsf(rotationQuickness) / SCALE_QUICKNESS, SCALE_MAX);

    // move the object center depending on the coordinate
    self.center = CGPointMake(self.originalPoint.x + self.xFromCenter,
                                   self.originalPoint.y + self.yFromCenter);


    // rotate by the angle
    CGAffineTransform rotateTransform = CGAffineTransformMakeRotation(rotationAngle);

    // scale depending on the rotation
    CGAffineTransform scaleTransform = CGAffineTransformScale(rotateTransform, scale, scale);

    // apply transformations
    self.transform = scaleTransform;

    // Change state
    [self changeStateToMoving];
}

/*!
 * With all the values fetched
 * from the pan gesture
 * gets the direction of the swipe
 * when the swipe is done
 */
- (void) detectSwipeDirection {

    if (self.xFromCenter &amp;gt; ACTION_MARGIN) {

        [self performRightAnimation];

    } else if (self.xFromCenter &amp;lt; - ACTION_MARGIN) {

        [self performLeftAnimation];

    } else if(self.yFromCenter &amp;lt; - Y_ACTION_MARGIN) {

        [self performUpAnimation];

    } else if(self.yFromCenter &amp;gt;  Y_ACTION_MARGIN) {

        [self performDownAnimation];

    } else {

        [self performCenterAnimation];

    }

    // And tell the delegate
    // that the swipe just finished
    [self.delegate didEndSwipeInCard:self];
}

- (void) changeStateToIdle {

    // Idle state indicates that the card
    // is showing in the view, but not moving.
    self.state = kJMPTFeedCardStateIdle;
}

- (void) changeStateToGone {

    // Gone state indicates that the card
    // was removed from the view
    self.state = kJMPTFeedCardStateGone;
}

- (void) changeStateToMoving {

    self.state = kJMPTFeedCardStateMoving;

    // Cancel Swipe if Moving but not should
    if (self.delegate &amp;amp;&amp;amp; ![self.delegate shouldMoveCard:self]) {
        [self performCenterAnimation];
    }
}

#pragma mark Animation Methods

/*!
 * The view will go to the right
 */
- (void) performRightAnimation {

    CGPoint finishPoint = CGPointMake(500, 2 * self.yFromCenter + self.originalPoint.y);

    [UIView animateWithDuration:0.3  delay:0 options:UIViewAnimationOptionBeginFromCurrentState animations:^{

        self.center = finishPoint;

    } completion:^(BOOL finished) {

        [self removeFromSuperview];

        [self changeStateToGone];

        [self.delegate swipedRightInCard:self];
    }];

}

/*!
 * The view will got to the left
 */
- (void) performLeftAnimation {

    CGPoint finishPoint = CGPointMake(-500, 2 * self.yFromCenter + self.originalPoint.y);

    [UIView animateWithDuration:0.3  delay:0 options:UIViewAnimationOptionBeginFromCurrentState animations:^{

        self.center = finishPoint;

    } completion:^(BOOL finished) {

        [self removeFromSuperview];

        [self changeStateToGone];

        [self.delegate swipedLeftInCard:self];
    }];

}

/*!
 * The view will go up
 * do not remove from view
 * just perfom some goofy moves
 */
- (void) performUpAnimation {

    [UIView animateWithDuration:0.7
                          delay:0
         usingSpringWithDamping:0.56
          initialSpringVelocity:0.0
                        options:UIViewAnimationOptionBeginFromCurrentState
                     animations:^{

                         self.center = self.originalPoint;

                         self.transform = CGAffineTransformMakeRotation(0);

                     } completion:^(BOOL finished) {
                         [self changeStateToIdle];

                         [self.delegate swipedUpInCard:self];
                     }];
}

/*!
 * The view will go down
 * do not remove from view
 * just perfom some goofy moves
 */
- (void) performDownAnimation {

    [UIView animateWithDuration:0.7
                          delay:0
         usingSpringWithDamping:0.56
          initialSpringVelocity:0.0
                        options:UIViewAnimationOptionBeginFromCurrentState
                     animations:^{

                         self.center = self.originalPoint;

                         self.transform = CGAffineTransformMakeRotation(0);

                     } completion:^(BOOL finished) {
                         [self changeStateToIdle];
                         [self.delegate swipedDownInCard:self];
                     }];

}

/*!
 * The view will go to the center
 * (cancel swipe) and reset the values
 */
- (void) performCenterAnimation {

    [UIView animateWithDuration:0.7
                          delay:0
         usingSpringWithDamping:0.56
          initialSpringVelocity:0.0
                        options:UIViewAnimationOptionBeginFromCurrentState
                     animations:^{

                         self.center = self.originalPoint;

                         self.transform = CGAffineTransformMakeRotation(0);

                     } completion:^(BOOL finished) {

                         [self changeStateToIdle];
                         [self.delegate didCancelSwipeInCard:self];
                     }];
}

#pragma mark - Programatically Swipe Methods

- (void) swipeLeft {

    // The same animation but with a delay
    CGPoint finishPoint = CGPointMake(-500, 2 * self.yFromCenter + self.originalPoint.y);

    [self changeStateToMoving];

    [UIView animateWithDuration:0.3  delay:0.3 options:UIViewAnimationOptionBeginFromCurrentState animations:^{

        self.center = finishPoint;

    } completion:^(BOOL finished) {

        if (finished) {
            [self removeFromSuperview];
            [self changeStateToGone];
            [self.delegate swipedLeftInCard:self];
        }

    }];
}

- (void) swipeRight {

    // The same animation, but with a delay
    CGPoint finishPoint = CGPointMake(500, 2 * self.yFromCenter + self.originalPoint.y);

    [self changeStateToMoving];

    [UIView animateWithDuration:0.3  delay:0.3 options:UIViewAnimationOptionBeginFromCurrentState animations:^{

        self.center = finishPoint;

    } completion:^(BOOL finished) {

        if (finished) {
            [self removeFromSuperview];
            [self changeStateToGone];
            [self.delegate swipedRightInCard:self];
        }
    }];
}

- (void) swipeUp {
    //TODO: Implement this
}

- (void) swipeDown {
    //TODO: Implement this
}


- (void) cancelSwipe {
    [self performCenterAnimation];
}

#pragma mark - IBActions

- (IBAction) cardButton: (id)sender {
    [self.delegate wasTouchedDownInCard:self];
}

@end
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;I needed a Carousel like control but swipe up/down actions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/nicklockwood/iCarousel"&gt;https://github.com/nicklockwood/iCarousel&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MDCSwipeToChoose&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/modocache/MDCSwipeToChoose"&gt;https://github.com/modocache/MDCSwipeToChoose&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;TinderSimpleSwipeCards&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cwRichardKim/TinderSimpleSwipeCards"&gt;https://github.com/cwRichardKim/TinderSimpleSwipeCards&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;@&lt;a href="https://github.com/clsource"&gt;clsource&lt;/a&gt;&amp;nbsp;added other directions&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cwRichardKim/TinderSimpleSwipeCards/issues/12"&gt;https://github.com/cwRichardKim/TinderSimpleSwipeCards/issues/12&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Directions&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/AlexHedley/528148bf47b634fda5fb007e4a5d9638"&gt;https://gist.github.com/AlexHedley/528148bf47b634fda5fb007e4a5d9638&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/images/wordpress.png" alt="Wordpress" title="Wordpress"&gt; &lt;a href="https://alexhedley.wordpress.com/2017/05/22/carousel-view/"&gt;Original Link&lt;/a&gt;&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>Jam Jar Cinema Wallet Passes</title>
			<link>https://alexhedley.github.io/blog/posts/jam-jar-cinema-wallet-passes</link>
			<description>&lt;p&gt;My local cinema is Awesome!&lt;/p&gt;</description>
			<author>AlexHedley</author>
			<guid>https://alexhedley.github.io/blog/posts/jam-jar-cinema-wallet-passes</guid>
			<pubDate>Sat, 20 May 2017 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;My local cinema is Awesome!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.jamjarcinema.com/"&gt;http://www.jamjarcinema.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I want to create passes to keep a memento of the films I've seen. I order online so don't get ticket stubs from the venue and I like having a digital copy, like CineWorld does.&lt;/p&gt;
&lt;p&gt;There are a number of websites which allow you to make Wallet Passes.&lt;/p&gt;
&lt;p&gt;I've recently tried PassSlot (&lt;a href="https://www.passslot.com/"&gt;https://www.passslot.com&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/passslot.png" alt="PassSlot" title="PassSlot"&gt;&lt;/p&gt;
&lt;p&gt;It has a free tier which allows you to create 1 PassID, multiple templates, and a set limit of passes, which is all I need.&lt;/p&gt;
&lt;p&gt;It has an SDK which is great.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/passslot/passslot-ios-sdk"&gt;https://github.com/passslot/passslot-ios-sdk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I created my Template with variables for the various pieces of information and now I have an iOS app which allows me to fill in the values, pick an image and create a pass.&lt;/p&gt;
&lt;p&gt;It uses the iTunes Artwork&amp;nbsp;Finder from Ben Dodson.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bendodson.com/projects/itunes-artwork-finder/"&gt;https://bendodson.com/projects/itunes-artwork-finder/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[gallery ids="1003,1004,1005,1006,1007,1008,1009,1010" type="rectangular"]&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/jjc-passes-1.png" alt=""&gt;
&lt;img src="https://alexhedley.github.io/blog/images/jjc-passes-2.png" alt=""&gt;
&lt;img src="https://alexhedley.github.io/blog/images/jjc-passes-3.png" alt=""&gt;
&lt;img src="https://alexhedley.github.io/blog/images/jjc-passes-4.png" alt=""&gt;
&lt;img src="https://alexhedley.github.io/blog/images/jjc-passes-5.png" alt=""&gt;
&lt;img src="https://alexhedley.github.io/blog/images/jjc-passes-6.png" alt=""&gt;
&lt;img src="https://alexhedley.github.io/blog/images/jjc-passes-7.png" alt=""&gt;
&lt;img src="https://alexhedley.github.io/blog/images/jjc-passes-8.png" alt=""&gt;&lt;/p&gt;
&lt;p&gt;Wallet&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/img_4042.png" alt=""&gt;
&lt;img src="https://alexhedley.github.io/blog/images/img_4043.png" alt=""&gt;
&lt;img src="https://alexhedley.github.io/blog/images/img_4044.png" alt=""&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/wallet/"&gt;https://developer.apple.com/wallet/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/reference/passkit"&gt;https://developer.apple.com/reference/passkit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;The PassSlot API is available on 'mashape'&lt;/p&gt;
&lt;p&gt;The documentation mentions&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Other Platforms -&amp;nbsp;The PassSlot API is also available through mashape. They have client libraries for Node, Ruby, Java, .NET, Windows 8&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;On the marketplace&lt;/p&gt;
&lt;p&gt;&lt;a href="https://market.mashape.com/passslot/passbook"&gt;https://market.mashape.com/passslot/passbook&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There is a button for open in Paw. I can't get it to work at the moment.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I'd started making a Mac app to create Wallet Passes.&lt;/p&gt;
&lt;p&gt;I followed the RW tutorials on PassKit but my PHP was rusty so never got that side working.&lt;/p&gt;
&lt;p&gt;I got the local one working which used the sign tool and created all the files&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pass.json&lt;/li&gt;
&lt;li&gt;manifest.json&lt;/li&gt;
&lt;li&gt;.pkpass&lt;/li&gt;
&lt;li&gt;etc&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/jjc-passes-mac-1.png" alt="JJC Passes (Mac) (1)" title="JJC Passes (Mac) (1)"&gt;&lt;/p&gt;
&lt;p&gt;But when I tried to add them to my phone I ran into issues, I raised a bug will Apple and they are working on something.&lt;/p&gt;
&lt;p&gt;The pass has to be served over SSL.&lt;/p&gt;
&lt;p&gt;I made my own Contact Card:&amp;nbsp;&lt;a href="https://alexhedley.wordpress.com/2014/12/29/passbook/"&gt;https://alexhedley.wordpress.com/2014/12/29/passbook/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/images/wordpress.png" alt="Wordpress" title="Wordpress"&gt; &lt;a href="https://alexhedley.wordpress.com/2017/05/20/jam-jar-cinema-wallet-passes/"&gt;Original Link&lt;/a&gt;&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>Custom UIAlertController in ObjC</title>
			<link>https://alexhedley.github.io/blog/posts/custom-uialertcontroller-in-objc</link>
			<description>&lt;p&gt;Custom UIAlertController in Objc&lt;/p&gt;</description>
			<author>AlexHedley</author>
			<guid>https://alexhedley.github.io/blog/posts/custom-uialertcontroller-in-objc</guid>
			<pubDate>Tue, 25 Apr 2017 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;Custom UIAlertController in Objc&lt;/p&gt;
&lt;p&gt;[gist 7dbb81c526aa3facceb461ea3a19d83e /]&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Alert.m&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;//http://hayageek.com/uialertcontroller-example-ios/

- (void)alert {
    UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"Info" message:@"You are using UIAlertController" preferredStyle:UIAlertControllerStyleAlert];
        
    UIAlertAction *ok = [UIAlertAction actionWithTitle:@"OK"
                                                 style:UIAlertActionStyleDefault
                                               handler:^(UIAlertAction * action)
                         {
                             [alert dismissViewControllerAnimated:YES completion:nil];
                         }];
    
    UIAlertAction *cancel = [UIAlertAction actionWithTitle:@"Cancel"
                                                     style:UIAlertActionStyleCancel
                                                   handler:^(UIAlertAction * action)
                             {
                                 [alert dismissViewControllerAnimated:YES completion:nil];
                             }];
    [cancel setValue:[UIColor redColor] forKey:@"titleTextColor"];
    
    [alert addAction:cancel];
    [alert addAction:ok];
    [alert setPreferredAction:ok];
        
    [self presentViewController:alert animated:YES completion:nil];
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;CustomAlert.m&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;- (void)showAlert {
    // http://stackoverflow.com/a/26530577/2895831
    UIAlertController *alertVC = [UIAlertController alertControllerWithTitle:@"Dont care what goes here, since we're about to change below" message:@"" preferredStyle:UIAlertControllerStyleAlert]; //UIAlertControllerStyleActionSheet
    NSMutableAttributedString *hogan = [[NSMutableAttributedString alloc] initWithString:@"Presenting the great... Hulk Hogan!"];
    [hogan addAttribute:NSFontAttributeName
                  value:[UIFont systemFontOfSize:50.0]
                  range:NSMakeRange(24, 11)];
    
    
    //[[UINavigationBar appearance] setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys: [UIFont fontWithName:kFont size:17.0f], NSFontAttributeName, titleColor, NSForegroundColorAttributeName, nil]];
    [hogan addAttribute:NSForegroundColorAttributeName value:[UIColor redColor] range:NSMakeRange(24, 11)];
    
    [alertVC setValue:hogan forKey:@"attributedTitle"];
    
    NSMutableAttributedString *hogan2 = [[NSMutableAttributedString alloc] initWithString:@"Super Leg Drop!"];
    [hogan addAttribute:NSFontAttributeName
                  value:[UIFont systemFontOfSize:30.0]
                  range:NSMakeRange(0, [hogan length])];
    
    //[[UINavigationBar appearance] setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys: [UIFont fontWithName:kFont size:17.0f], NSFontAttributeName, titleColor, NSForegroundColorAttributeName, nil]];
    [hogan2 addAttribute:NSForegroundColorAttributeName value:[UIColor greenColor] range:NSMakeRange(0, [hogan2 length])];
    
    [alertVC setValue:hogan2 forKey:@"attributedMessage"];
    
    UIAlertAction *button = [UIAlertAction actionWithTitle:@"Label text"
                                                     style:UIAlertActionStyleDefault
                                                   handler:^(UIAlertAction *action){
                                                       //add code to make something happen once tapped
                                                   }];
    UIImage *accessoryImage = [UIImage imageNamed:@"someImage"];
    [button setValue:accessoryImage forKey:@"image"];
    
    [alertVC addAction:button];
    
    [alertVC addTextFieldWithConfigurationHandler:^(UITextField *textField) {
        textField.placeholder = NSLocalizedString(@"Code", nil);
        textField.textColor = [UIColor redColor];
        textField.tintColor = [UIColor greenColor];
        textField.clearButtonMode = UITextFieldViewModeWhileEditing;
        textField.borderStyle = UITextBorderStyleRoundedRect;
        textField.keyboardType = UIKeyboardTypeNumberPad;
    }];
    
    [alertVC addAction:[UIAlertAction actionWithTitle:NSLocalizedString(@"OK", nil)
                                                        style:UIAlertActionStyleDefault
                                                      handler:^(UIAlertAction *action)
                                {
                                    UITextField *textField = [alertVC.textFields firstObject];
                                    NSLog(@"%@", textField.text);
                                }]
     ];
    
    //http://stackoverflow.com/a/39853234/2895831
    UIView *firstSubview = alertVC.view.subviews.firstObject;
    UIView *alertContentView = firstSubview.subviews.firstObject;
    for (UIView *subSubView in alertContentView.subviews) { //This is main catch
        subSubView.backgroundColor = [UIColor darkGrayColor]; //Here you change background
    }
    
    [self presentViewController:alertVC animated:YES completion:nil];
    alertVC.view.tintColor = [UIColor purpleColor];
    
    //Change the background color of the UITextField view
    //http://stackoverflow.com/a/30225592/2895831
    for (UIView *textfield in alertVC.textFields) {
        UIView *container = textfield.superview;
        UIView *effectView = container.superview.subviews[0];
        
        if (effectView &amp;amp;&amp;amp; [effectView class] == [UIVisualEffectView class]){
            container.backgroundColor = [UIColor purpleColor]; //[UIColor clearColor];
            //[effectView removeFromSuperview];
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hayageek.com/uialertcontroller-example-ios/"&gt;http://hayageek.com/uialertcontroller-example-ios/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://iosdevcenters.blogspot.com/2016/05/hacking-uialertcontroller-in-swift.html"&gt;https://iosdevcenters.blogspot.com/2016/05/hacking-uialertcontroller-in-swift.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[gallery ids="976,981" type="rectangular"]&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/simulator-screen-shot-25-apr-2017-14-50-06.png" alt=""&gt;
&lt;img src="https://alexhedley.github.io/blog/images/uialertcontroller-2.png" alt=""&gt;&lt;/p&gt;
&lt;p&gt;You can change the background colour of the Alert too.&lt;/p&gt;
&lt;p&gt;Change the colour of added controls like UITextField too!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Links&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Hacking UIAlertController in Swift. &lt;a href="https://iosdevcenters.blogspot.com/2016/05/hacking-uialertcontroller-in-swift.html"&gt;https://iosdevcenters.blogspot.com/2016/05/hacking-uialertcontroller-in-swift.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;UIAlertController custom font, size, color &lt;a href="http://stackoverflow.com/a/26530577/2895831"&gt;http://stackoverflow.com/a/26530577/2895831&lt;/a&gt;&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>XLForm</title>
			<link>https://alexhedley.github.io/blog/posts/xlform</link>
			<description>&lt;p&gt;XLForm is the most flexible and powerful iOS library to create dynamic table-view forms. The goal of the library is to get the same power of hand-made forms but spending 1/10 of the time.&lt;/p&gt;</description>
			<author>AlexHedley</author>
			<enclosure url="https://alexhedley.github.io/blog/posts/images/xl_appicon_152.png" length="0" type="image" />
			<guid>https://alexhedley.github.io/blog/posts/xlform</guid>
			<pubDate>Thu, 06 Apr 2017 00:00:00 GMT</pubDate>
			<content:encoded>&lt;blockquote&gt;
&lt;p&gt;XLForm is the most flexible and powerful iOS library to create dynamic table-view forms. The goal of the library is to get the same power of hand-made forms but spending 1/10 of the time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/xmartlabs/XLForm"&gt;https://github.com/xmartlabs/XLForm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Image&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Add an image to the left of a form input&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;row = [XLFormRowDescriptor formRowDescriptorWithTag:@"fullname" rowType:XLFormRowDescriptorTypeText];
[row.cellConfigAtConfigure setObject:@"Full Name" forKey:@"textField.placeholder"];
[row.cellConfigAtConfigure setObject:[UIImage imageNamed:@"User"] forKey:@"imageView.image"];
[section addFormRow:row];
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Buttons&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;XLFormRowDescriptor *buttonRow = [XLFormRowDescriptor formRowDescriptorWithTag:kButton rowType:XLFormRowDescriptorTypeButton title:@"A 6 digit verification code has been sent via SMS"];
[buttonRow.cellConfig setObject:[UIColor purpleColor] forKey:@"textLabel.color"];
[buttonRow.cellConfig setObject:[UIFont fontWithName:kFont size:10] forKey:@"textLabel.font"];
buttonRow.cellStyle = UITableViewCellStyleValue1;
buttonRow.value = @"Enter Code";
buttonRow.action.formSelector = @selector(didTouchButton:);
[section addFormRow:buttonRow];
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Screenshot&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.files.wordpress.com/2017/03/register.png?w=175" alt="Register"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Switch&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/xmartlabs/XLForm/blob/master/Examples/Objective-C/Examples/PredicateExamples/PredicateFormViewController.m"&gt;PredicateFormViewController&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To turn the switch on&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;row = [XLFormRowDescriptor formRowDescriptorWithTag:@"switch" rowType:XLFormRowDescriptorTypeBooleanSwitch title:@"Boolean"];
row.value = @1;
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;Issues&lt;/p&gt;
&lt;p&gt;I raised an issue about the Floating Label covering the Image.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/xmartlabs/XLForm/issues/940https://github.com/xmartlabs/XLForm/issues/940"&gt;https://github.com/xmartlabs/XLForm/issues/940&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/register-jvfloatlabeledtextfield-2.png" alt="Register - JVFloatLabeledTextField (2)"&gt;&lt;/p&gt;
&lt;p&gt;A very quick reply to update&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;- (NSArray *)layoutConstraints
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I added the following:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;const static CGFloat kHMargin = 50.0f;

NSDictionary \*metrics = @{@"vMargin":@(kVMargin), @"hMargin":@(kHMargin)};

[result addObjectsFromArray:[NSLayoutConstraint constraintsWithVisualFormat:@"H:|-(hMargin)-[floatLabeledTextField]-|" options:0 metrics:metrics views:views]];
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/register-jvfloatlabeledtextfield-4.png" alt="Register - JVFloatLabeledTextField (4)"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Cell Separator&lt;/p&gt;
&lt;p&gt;Add in 'viewDidLoad'&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;self.tableView.separatorColor = [UIColor redColor];
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/xmartlabs/XLForm/issues/943"&gt;https://github.com/xmartlabs/XLForm/issues/943&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/register-jvfloatlabeledtextfield-5.png" alt="Register - JVFloatLabeledTextField (5)"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Section Background Colour&lt;/p&gt;
&lt;p&gt;I wished to change the Header/Footer background colour.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Code&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;- (void)viewDidLoad {
    [[self tableView] registerClass:[UITableViewHeaderFooterView class] forHeaderFooterViewReuseIdentifier:@"headerFooterReuseIdentifier"];
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Header&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;-(UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section {
    UITableViewHeaderFooterView *headerFooterView = [[self tableView] dequeueReusableHeaderFooterViewWithIdentifier:@"headerFooterReuseIdentifier"];
    headerFooterView.contentView.backgroundColor = kBackgroundColor;

    return headerFooterView;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Footer&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;-(UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section {
    UITableViewHeaderFooterView *headerFooterView = [[self tableView] dequeueReusableHeaderFooterViewWithIdentifier:@"headerFooterReuseIdentifier"];
    headerFooterView.contentView.backgroundColor = kBackgroundColor;

    return headerFooterView;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/43180133/custom-xlform-section-background-color/43232745#43232745"&gt;http://stackoverflow.com/questions/43180133/custom-xlform-section-background-color/43232745#43232745&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xmartlabs/XLForm/issues/335"&gt;https://github.com/xmartlabs/XLForm/issues/335&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;FloatLabeledTextFieldCell&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/xmartlabs/XLForm/tree/master/Examples/Objective-C/Examples/CustomRows/FloatLabeledTextField"&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Floating Label&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There is a property on the TextField you can set to change the colour of the Floating Label&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;floatingLabelActiveTextColor&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;[row.cellConfig setObject:[UIColor redColor] forKey:@"floatLabeledTextField.floatingLabelActiveTextColor"];
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;TextField&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you want to change the TextField text colour:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;[row.cellConfig setObject:[UIColor whiteColor] forKey:@"floatLabeledTextField.textColor"];
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/register-jvfloatlabeledtextfield-5.png" alt="Register - JVFloatLabeledTextField (5)"&gt;&lt;/p&gt;
&lt;p&gt;Didn't change anything:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;[row.cellConfig setObject:[UIColor greenColor] forKey:@"textLabel.highlightedTextColor"];
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;[row.cellConfig setObject:[UIColor redColor] forKey:@"floatLabeledTextField.floatingLabel.textColor"];
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Image&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Set the "imageView.tintColor"&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;[row.cellConfigAtConfigure setObject:[UIColor whiteColor] forKey:@"imageView.tintColor"];
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/register-jvfloatlabeledtextfield-6.png" alt="Register - JVFloatLabeledTextField (6)"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Accessory&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/xmartlabs/XLForm#how-to-change-input-accessory-view-navigation-view"&gt;https://github.com/xmartlabs/XLForm#how-to-change-input-accessory-view-navigation-view&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;- (UIView *)inputAccessoryViewForRowDescriptor:(XLFormRowDescriptor *)rowDescriptor
{
      return nil; //will hide it completely
      // You can use the rowDescriptor parameter to hide/customize the accessory view for a particular rowDescriptor type.
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Without reading the documentation!!&lt;/p&gt;
&lt;p&gt;Adding a Checkmark&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;XLFormRowDescriptor *row = [XLFormRowDescriptor formRowDescriptorWithTag:@"Check" rowType:XLFormRowDescriptorTypeBooleanCheck title:NSLocalizedString(@"Check", nil)];
[newSection addFormRow:row];
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Swap to a different image&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;UIImageView *imageView = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"Circle"]];
imageView.tintColor = [UIColor redColor];
[row.cellConfig setObject:imageView forKey:@"accessoryView"];
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now to handle the toggling...&lt;/p&gt;
&lt;p&gt;This method isn't being called.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;- (void)tableView:(UITableView *)tableView accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *)indexPath {
&amp;nbsp; &amp;nbsp; NSLog(@"Tapped");
}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;Dynamically Adding Rows&lt;/p&gt;
&lt;p&gt;I'm using segues to move between views.&lt;/p&gt;
&lt;p&gt;I'm setting a property - an array of items in the 'prepareForSegue'.&lt;/p&gt;
&lt;p&gt;But 'initWithCoder' doesn't have these values set yet.&lt;/p&gt;
&lt;p&gt;'viewDidLoad' does so call a method there.&lt;/p&gt;
&lt;p&gt;Create your Form, Section(s) and Row(s) in the interface and use them:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;[section addFormRow:row beforeRow:buttonRow];
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;Selected Row Label colour&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/xmartlabs/XLForm/issues/574"&gt;https://github.com/xmartlabs/XLForm/issues/574&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tried a couple of options:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;[row.cellConfig setObject:[UIColor redColor] forKey:@"textLabel.highlightedTextColor"];
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;[row.cellConfig setObject:[UIColor redColor] forKey:@"textLabel.tintColor"];
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;Change the cursor colour&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;textField.tintColor&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;[row.cellConfig setObject:[UIColor greenColor] forKey:@"textField.tintColor"];
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/register-jvfloatlabeledtextfield-7.png" alt="Register - JVFloatLabeledTextField (7)"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;p&gt;Alternatives&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nicklockwood/FXForms"&gt;https://github.com/nicklockwood/FXForms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Form"&gt;https://github.com/hyperoslo/Form&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/images/wordpress.png" alt="Wordpress" title="Wordpress"&gt; &lt;a href="https://alexhedley.wordpress.com/2017/04/06/xlform/"&gt;Original Link&lt;/a&gt;&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>UISwitch</title>
			<link>https://alexhedley.github.io/blog/posts/uiswitch</link>
			<description>&lt;p&gt;Changing the colour of a &lt;a href="https://developer.apple.com/reference/uikit/uiswitch?language=objc"&gt;UISwitch&lt;/a&gt; control.&lt;/p&gt;</description>
			<author>AlexHedley</author>
			<guid>https://alexhedley.github.io/blog/posts/uiswitch</guid>
			<pubDate>Mon, 03 Apr 2017 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;Changing the colour of a &lt;a href="https://developer.apple.com/reference/uikit/uiswitch?language=objc"&gt;UISwitch&lt;/a&gt; control.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;#define kSwitchOnColor [UIColor colorWithRed:0.647 green:0.757 blue:0.463 alpha:1] // /*#A5C176*/ Green
#define kSwitchOffColor [UIColor colorWithRed:0.29 green:0.29 blue:0.525 alpha:1]; // /*#4A4A86*/ Purple
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;UISwitch *switchview = [[UISwitch alloc] initWithFrame:CGRectZero];
[switchview setOn:TRUE animated:YES\];
switchview.onTintColor = kSwitchOnColor;
switchview.tintColor = kSwitchOffColor;
//tintColor just does outline
switchview.backgroundColor = kSwitchOffColor;
switchview.layer.cornerRadius = 16.0f;

tintColor changes the background when sliding but when off just has the outline, if you change the background then it is square so add a corner radius.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;[gallery ids="917,918,916,915" type="rectangular"]&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/uiswitch-ontintcolor.png" alt=""&gt;
&lt;img src="https://alexhedley.github.io/blog/images/uiswitch-tintcolor.png" alt=""&gt;
&lt;img src="https://alexhedley.github.io/blog/images/uiswitch-background.png" alt=""&gt;
&lt;img src="https://alexhedley.github.io/blog/images/uiswitch-background-with-radius.png" alt=""&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/a/22830039/2895831"&gt;http://stackoverflow.com/a/22830039/2895831&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/a/19123019/2895831"&gt;http://stackoverflow.com/a/19123019/2895831&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[gist https://gist.github.com/AlexHedley/41485d2b11f6f03a4734e350ee7dac3f /]&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/images/wordpress.png" alt="Wordpress" title="Wordpress"&gt; &lt;a href="https://alexhedley.wordpress.com/2017/04/03/uiswitch/"&gt;Original Link&lt;/a&gt;&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
	</channel>
</rss>