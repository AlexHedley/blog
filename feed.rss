<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
	<channel>
		<title />
		<link>https://alexhedley.github.io/blog</link>
		<description />
		<copyright>Copyright © 2023</copyright>
		<pubDate>Thu, 25 May 2023 16:38:17 GMT</pubDate>
		<lastBuildDate>Thu, 25 May 2023 16:38:17 GMT</lastBuildDate>
		<item>
			<title>JSQMessagesViewController - Messages UI</title>
			<link>https://alexhedley.github.io/blog/posts/jsqmessagesviewcontroller-messages-ui</link>
			<description>&lt;p&gt;On the app I'm currently working on I've got a messaging portion.&lt;/p&gt;</description>
			<author>AlexHedley</author>
			<enclosure url="https://alexhedley.github.io/blog/posts/images/jsq_messages_banner.png" length="0" type="image" />
			<guid>https://alexhedley.github.io/blog/posts/jsqmessagesviewcontroller-messages-ui</guid>
			<pubDate>Sat, 03 Feb 2018 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;On the app I'm currently working on I've got a messaging portion.&lt;/p&gt;
&lt;p&gt;Originally I implemented a basic TableView with a TextField to add a message.&lt;/p&gt;
&lt;p&gt;Then I searched for Messages UI frameworks and came across&amp;nbsp;&lt;strong&gt;JSQMessagesViewController&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.jessesquires.com/JSQMessagesViewController/"&gt;http://www.jessesquires.com/JSQMessagesViewController/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jessesquires/JSQMessagesViewController"&gt;https://github.com/jessesquires/JSQMessagesViewController&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There's a Sample project you can look into - JSQMessagesDemo.&lt;/p&gt;
&lt;p&gt;It comes as a Cocoapod:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cocoapods.org/pods/JSQMessagesViewController"&gt;https://cocoapods.org/pods/JSQMessagesViewController&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I'm using 7.3.4.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Create a new Xcode project.&lt;/p&gt;
&lt;p&gt;Open terminal at that folder&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pod init&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;add&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pod 'JSQMessagesViewController'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;then&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pod install&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Open the Xcode '#App.xcworkspace'&lt;/p&gt;
&lt;p&gt;Create a View Controller that inherits&lt;/p&gt;
&lt;p&gt;&lt;code&gt;: JSQMessagesViewController&amp;lt;UIActionSheetDelegate, JSQMessagesComposerTextViewPasteDelegate&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#import &amp;lt;JSQMessagesViewController/JSQMessagesViewController.h&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#import "DemoData.h"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@class MessageViewController;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@protocol MessageViewControllerDelegate &amp;lt;NSObject&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;- (void)didDismissMessagesViewController:(MessageViewController *)vc;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@end&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Add some properties and methods&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@property (weak, nonatomic) id&amp;lt;MessageViewControllerDelegate&amp;gt; delegateModal;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@property (strong, nonatomic) DemoData *data;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;- (void)receiveMessagePressed:(UIBarButtonItem *)sender;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;- (void)closePressed:(UIBarButtonItem *)sender;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I didn't bother with any of the settings so commented these checks out.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I couldn't find the Accessory Button Delegate to add to my View Controller.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#import "JSQMessagesViewAccessoryButtonDelegate.h"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;JSQMessagesViewAccessoryButtonDelegate&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;For testing create a new class for your demo data.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DemoData.h&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@interface DemoData : NSObject&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@property (strong, nonatomic) NSMutableArray *messages;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@property (strong, nonatomic) NSDictionary *users;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@property (strong, nonatomic) JSQMessagesBubbleImage *outgoingBubbleImageData;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@property (strong, nonatomic) JSQMessagesBubbleImage *incomingBubbleImageData;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;@end&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;DemoData.m&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Create some test Users.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;- (instancetype)init
{
&amp;nbsp; &amp;nbsp; self = [super init];
&amp;nbsp; &amp;nbsp; if (self) { &amp;nbsp;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [self loadFakeMessages];

&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; self.users = @{ @"1" : @"Alex",
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; @"2" : @"Sam",
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; @"3" : @"Kev",
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; @"4" : @"Ray" };

&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; JSQMessagesBubbleImageFactory *bubbleFactory = [[JSQMessagesBubbleImageFactory alloc] init];&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; self.outgoingBubbleImageData = [bubbleFactory outgoingMessagesBubbleImageWithColor:[UIColor jsq_messageBubbleLightGrayColor]];
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; self.incomingBubbleImageData = [bubbleFactory incomingMessagesBubbleImageWithColor:[UIColor jsq_messageBubbleGreenColor]];
&amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp; return self;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Create the Fake Messages&lt;/p&gt;
&lt;p&gt;&lt;code&gt;- (void)loadFakeMessages { ... }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;We can use this back in our&amp;nbsp;&lt;code&gt;MessageViewController.m&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#pragma mark - View lifecycle&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;viewDidLoad&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;viewWillAppear&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;viewDidAppear&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since I'm not using Avatars add this to &lt;code&gt;viewDidLoad&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;self.collectionView.collectionViewLayout.incomingAvatarViewSize = CGSizeZero;&amp;nbsp;self.collectionView.collectionViewLayout.outgoingAvatarViewSize = CGSizeZero;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Also return nil in 'avatarImageDataForItemAtIndexPath'&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;- (id&amp;lt;JSQMessageAvatarImageDataSource&amp;gt;)collectionView:(JSQMessagesCollectionView \*)collectionView avatarImageDataForItemAtIndexPath:(NSIndexPath \*)indexPath {
    ...
    return nil;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Implement these other methods.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#pragma mark - Custom menu actions for cells&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#pragma mark - Actions&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#pragma mark - JSQMessagesViewController method overrides&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#pragma mark - JSQMessages CollectionView DataSource&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Choose a user here&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;senderId&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;senderId&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;#pragma mark - UICollectionView DataSource&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#pragma mark - UICollectionView Delegate&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#pragma mark - Custom menu items&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#pragma mark - JSQMessages collection view flow layout delegate&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#pragma mark - Adjusting cell label heights&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#pragma mark - Responding to collection view tap events&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#pragma mark - JSQMessagesComposerTextViewPasteDelegate methods&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#pragma mark - JSQMessagesViewAccessoryDelegate methods&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Changing some settings&lt;/p&gt;
&lt;p&gt;I didn't want the Add Attachments button.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;viewDidLoad&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;self.inputToolbar.contentView.leftBarButtonItem = nil;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jessesquires/JSQMessagesViewController/issues/338"&gt;https://github.com/jessesquires/JSQMessagesViewController/issues/338&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jessesquires/JSQMessagesViewController/issues/280"&gt;https://github.com/jessesquires/JSQMessagesViewController/issues/280&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;Now just to swap out the messages to my XMPP Server...&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/images/wordpress.png" alt="Wordpress" title="Wordpress"&gt; &lt;a href="https://alexhedley.wordpress.com/2018/02/03/jsqmessagesviewcontroller-messages-ui/"&gt;Original Link&lt;/a&gt;&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>XMPPFramework</title>
			<link>https://alexhedley.github.io/blog/posts/xmppframework</link>
			<description>&lt;p&gt;XMPPFramework&lt;/p&gt;</description>
			<author>AlexHedley</author>
			<enclosure url="https://alexhedley.github.io/blog/posts/images/xmppframework2.png" length="0" type="image" />
			<guid>https://alexhedley.github.io/blog/posts/xmppframework</guid>
			<pubDate>Sat, 03 Feb 2018 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;XMPPFramework&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/robbiehanson/XMPPFramework"&gt;https://github.com/robbiehanson/XMPPFramework&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Create an Xcode project.&lt;/p&gt;
&lt;p&gt;Open terminal at that folder location.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pod init&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pod 'XMPPFramework', :git =&amp;gt; "https://github.com/robbiehanson/XMPPFramework.git", :branch =&amp;gt; 'master'&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;@import XMPPFramework;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Getting Started&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/robbiehanson/XMPPFramework/wiki/GettingStarted_iOS"&gt;https://github.com/robbiehanson/XMPPFramework/wiki/GettingStarted_iOS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;Tutorials&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://code.tutsplus.com/series/building-a-jabber-client-for-ios--mobile-22620"&gt;https://code.tutsplus.com/series/building-a-jabber-client-for-ios--mobile-22620&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.tutsplus.com/tutorials/building-a-jabber-client-for-ios-server-setup--mobile-6958"&gt;https://code.tutsplus.com/tutorials/building-a-jabber-client-for-ios-server-setup--mobile-6958&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.tutsplus.com/tutorials/building-a-jabber-client-for-ios-interface-setup--mobile-7188"&gt;https://code.tutsplus.com/tutorials/building-a-jabber-client-for-ios-interface-setup--mobile-7188&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.tutsplus.com/tutorials/building-a-jabber-client-for-ios-xmpp-setup--mobile-7190"&gt;https://code.tutsplus.com/tutorials/building-a-jabber-client-for-ios-xmpp-setup--mobile-7190&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.tutsplus.com/tutorials/building-a-jabber-client-for-ios-custom-chat-view-and-emoticons--mobile-7728"&gt;https://code.tutsplus.com/tutorials/building-a-jabber-client-for-ios-custom-chat-view-and-emoticons--mobile-7728&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Had issues setting up&amp;nbsp;&lt;a href="https://www.ejabberd.im/"&gt;Ejabbered&lt;/a&gt; on the mac.&lt;/p&gt;
&lt;p&gt;I'm using an&amp;nbsp;&lt;a href="https://www.igniterealtime.org/projects/openfire/"&gt;OpenFire&lt;/a&gt;&amp;nbsp;server I setup&amp;nbsp;so used that instead, with a couple of clients connected to there instead.&lt;/p&gt;
&lt;p&gt;Clients&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.igniterealtime.org/downloads/index.jsp"&gt;Spark 2.8.2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://adium.im/"&gt;Adium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://xchat.org/"&gt;XChat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Stack Overflow&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/9091767/up-to-date-instructions-on-how-to-install-xmppframework-manually/30543948#30543948"&gt;http://stackoverflow.com/questions/9091767/up-to-date-instructions-on-how-to-install-xmppframework-manually/30543948#30543948&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Setting the Server&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;set the server url&lt;/p&gt;
&lt;p&gt;set the port&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Delivery Receipts&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Read Receipts&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Group Chat&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/images/wordpress.png" alt="Wordpress" title="Wordpress"&gt; &lt;a href="https://alexhedley.wordpress.com/2018/02/03/xmppframework/"&gt;Original Link&lt;/a&gt;&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>MapKit</title>
			<link>https://alexhedley.github.io/blog/posts/mapkit</link>
			<description>&lt;p&gt;So I've been learning &lt;a href="https://developer.apple.com/maps/"&gt;MapKit&lt;/a&gt; this week.&lt;/p&gt;</description>
			<author>AlexHedley</author>
			<enclosure url="https://alexhedley.github.io/blog/posts/images/maps_ios-128x128_2x.png" length="0" type="image" />
			<guid>https://alexhedley.github.io/blog/posts/mapkit</guid>
			<pubDate>Sat, 03 Feb 2018 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;So I've been learning &lt;a href="https://developer.apple.com/maps/"&gt;MapKit&lt;/a&gt; this week.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/reference/mapkit"&gt;Developer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It's been a fun new framework to look into.&lt;/p&gt;
&lt;p&gt;Create an Annotation so you can have custom properties.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;@interface Annotation : NSObject&amp;lt;MKAnnotation&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add a category to it so you have a way of telling what it is.&lt;/p&gt;
&lt;p&gt;This could be an enum.&lt;/p&gt;
&lt;p&gt;In the Delegate method&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;- (MKAnnotationView *)mapView:(MKMapView *)theMapView viewForAnnotation:(id &amp;lt;MKAnnotation&amp;gt;)annotation
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can use the category to set up some properties like a button and the pin colour.&lt;/p&gt;
&lt;p&gt;I'm wondering if the&amp;nbsp;"reuseIdentifier" should be unique here too?&lt;/p&gt;
&lt;p&gt;You've added a button, now how to call it?&lt;/p&gt;
&lt;p&gt;You could add a target and action&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;[rightButton addTarget:## action:## forControlEvents:UIControlEventTouchUpInside];
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;but instead you can use the "calloutAccessoryControlTapped" delegate method.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;- (void)mapView:(MKMapView *)mapView annotationView:(MKAnnotationView *)view calloutAccessoryControlTapped:(UIControl *)control
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As this isn't a &amp;nbsp;"MKAnnotation" like "viewForAnnotation" but an "MKAnnotationView" we need to get the annotation from the passed view.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;if ([view.annotation isKindOfClass:[OotAnnotation class]]) { ... }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then call pfs,&lt;/p&gt;
&lt;p&gt;Then in the "prepareForSegue" you need to get the Annotation when you click on a Pin button, this can be cast from the Sender&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;if ([view.annotation isKindOfClass:[OotAnnotation class]]) { ... }
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;Annotation \*annotation = (Annotation *)[(MKAnnotationView *)sender annotation];
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You could then pass your custom Location details via the ViewController. (See code)&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Searching for locations to add to the map:&lt;/p&gt;
&lt;p&gt;MKLocalSearchRequest&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Adding a route, need to investigate this more.&lt;/p&gt;
&lt;p&gt;MKPolyline&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;All Code&lt;/p&gt;
&lt;p&gt;[gist 6ac1c60428f6e13692f7f3f11d931f0e]&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Annotation.h&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;#import &amp;lt;UIKit/UIKit.h&amp;gt;
#import &amp;lt;Foundation/Foundation.h&amp;gt;
#import &amp;lt;MapKit/MapKit.h&amp;gt;
#import "Location.h"

@interface OotAnnotation : NSObject&amp;lt;MKAnnotation&amp;gt; {
    CLLocationCoordinate2D  coordinate;
    NSString *title;
    NSString *subtitle;
    NSInteger categoryID;
}

@property (nonatomic, assign) CLLocationCoordinate2D coordinate;
@property (nonatomic, copy) NSString *title;
@property (nonatomic, copy) NSString *subtitle;
@property NSInteger categoryID;
@property (nonatomic, strong) Location *locationDetails;

typedef NS_ENUM(NSInteger, Category) {
    PinCategoryPlace,
    PinCategoryUser,
    PinCategoryPub,
    PinCategoryNightclub,
    PinCategoryFood
};

@end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;Annotation.m&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;#import "Annotation.h"

@implementation OotAnnotation

@end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;Location.h&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;#import &amp;lt;Foundation/Foundation.h&amp;gt;

@interface Location : NSObject

@property (nonatomic, strong) NSString *locationName;
@property double locationRating;
@property NSInteger locationNumOfReviews;
@property (nonatomic, strong) NSString *locationDetails;
@property (nonatomic, strong) NSString *locationImageUrl;
@property (nonatomic, strong) NSString *locationEmail;
@property (nonatomic, strong) NSString *locationPhone;
@property (nonatomic, strong) NSString *locationRouteDetails;
@property (nonatomic, strong) NSString *locationNotes;
@property (nonatomic, strong) NSString *locationDeal;

- (id)initWithName:(NSString *)name rating:(double)rating numOfReviews:(NSInteger)numOfReviews details:(NSString *)details imageUrl:(NSString *)imageUrl email:(NSString *)email phone:(NSString *)phone routeDetails:(NSString *)routeDetails notes:(NSString *)notes deal:(NSString *)deal;

+ (id)locationWithName:(NSString *)name rating:(double)rating numOfReviews:(NSInteger)numOfReviews details:(NSString *)details imageUrl:(NSString *)imageUrl email:(NSString *)email phone:(NSString *)phone routeDetails:(NSString *)routeDetails notes:(NSString *)notes deal:(NSString *)deal;

@end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;Location.m&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;#import "Location.h"

@implementation Location

- (id)initWithName:(NSString *)name rating:(double)rating numOfReviews:(NSInteger)numOfReviews details:(NSString *)details imageUrl:(NSString *)imageUrl email:(NSString *)email phone:(NSString *)phone routeDetails:(NSString *)routeDetails notes:(NSString *)notes deal:(NSString *)deal {
    self = [super init];
    
    if (self) {
        self.locationName = name;
        self.locationRating = rating;
        self.locationNumOfReviews = numOfReviews;
        self.locationDetails = details;
        self.locationImageUrl = imageUrl;
        self.locationEmail = email;
        self.locationPhone = phone;
        self.locationRouteDetails = routeDetails;
        self.locationNotes = notes;
        self.locationDeal = deal;
    }
    return self;
}

+ (id)locationWithName:(NSString *)name rating:(double)rating numOfReviews:(NSInteger)numOfReviews details:(NSString *)details imageUrl:(NSString *)imageUrl email:(NSString *)email phone:(NSString *)phone routeDetails:(NSString *)routeDetails notes:(NSString *)notes deal:(NSString *)deal {
    return [[self alloc] initWithName:name rating:rating numOfReviews:numOfReviews details:details imageUrl:imageUrl email:email phone:phone routeDetails:routeDetails notes:notes deal:deal];
}

@end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;MapViewController.h&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;#import &amp;lt;UIKit/UIKit.h&amp;gt;
#import &amp;lt;MapKit/MapKit.h&amp;gt;
#import &amp;lt;MapKit/MKAnnotation.h&amp;gt;
#import &amp;lt;AddressBook/AddressBook.h&amp;gt;
#import &amp;lt;Contacts/Contacts.h&amp;gt;

@interface MapViewController : UIViewController &amp;lt;MKMapViewDelegate,  CLLocationManagerDelegate&amp;gt;

@property (nonatomic, strong) IBOutlet MKMapView *mapView;
@property (nonatomic, retain) CLLocationManager *locationManager;

@property (nonatomic, retain) MKPolyline *routeLine;
@property (nonatomic, retain) MKPolylineView *routeLineView;

@end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;MapViewController.m&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;#import "MapViewController.h"
#import "Annotation.h"
#import "LocationViewController.h"

@interface MapViewController ()

@end

@implementation MapViewController

#pragma mark - View Methods

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    self.mapView.delegate = self;
    
    self.locationManager = [[CLLocationManager alloc] init];
    self.locationManager.delegate = self;
    #ifdef __IPHONE_8_0
    if(IS_OS_8_OR_LATER) {
        // Use one or the other, not both. Depending on what you put in info.plist
        [self.locationManager requestWhenInUseAuthorization];
        [self.locationManager requestAlwaysAuthorization];
    }
    #endif
    [self.locationManager startUpdatingLocation];
    
    _mapView.showsUserLocation = YES;
    [_mapView setMapType:MKMapTypeStandard];
    [_mapView setZoomEnabled:YES];
    [_mapView setScrollEnabled:YES];
}

-(void)viewDidAppear:(BOOL)animated {
    [super viewDidAppear:YES];
    
    self.locationManager.distanceFilter = kCLDistanceFilterNone;
    self.locationManager.desiredAccuracy = kCLLocationAccuracyBest;
    [self.locationManager startUpdatingLocation];
    NSLog(@"%@", [self deviceLocation]);
    
    //View Area
    MKCoordinateRegion region = { { 0.0, 0.0 }, { 0.0, 0.0 } };
    region.center.latitude = self.locationManager.location.coordinate.latitude;
    region.center.longitude = self.locationManager.location.coordinate.longitude;
    region.span.longitudeDelta = 0.005f;
    region.span.longitudeDelta = 0.005f;
    [_mapView setRegion:region animated:YES];
    
    //[self addLocation:@"Protirus" subTitle:@"Office" lat:54.969617 lon:-1.618393];
    //[self addLocation:@"Town Wall" subTitle:@"Gastropub" lat:54.9694 lon:-1.6184]; //54.9694° N, 1.6184° W
    
    Location *locationDetails = [Location locationWithName:@"Town Wall" rating:4.2 numOfReviews:73 details:@"Gastropub" imageUrl:@"TheTownWall" email:@"hayley@thetownwall.com" phone:@"01912323000" routeDetails:@"Town Wall - 5 minutes away - marked" notes:@"Plan to stay for an hour perhaps" deal:@"DEAL - 2 for 1 Drinks"];
    
    [self addPinWithTitle:@"Protirus" subTitle:@"Office" lat:54.969617 lon:-1.618393 category:PinCategoryPlace locationDetails:nil];
    [self addPinWithTitle:@"Town Wall" subTitle:@"Gastropub" lat:54.9694 lon:-1.6184 category:PinCategoryPub locationDetails:locationDetails];
    
    CLLocationCoordinate2D coordinateArray[2];
    coordinateArray[0] = CLLocationCoordinate2DMake(54.969617, -1.618393);
    coordinateArray[1] = CLLocationCoordinate2DMake(54.9694, -1.6184);
    [self addRoute:coordinateArray];
    
    [self addFood];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - Locations

// http://stackoverflow.com/a/27164326
- (void)addPinWithTitle:(NSString *)title subTitle:(NSString *)subTitle lat:(double)lat lon:(double)lon category:(int)category locationDetails:(OotLocation *)locationDetails {
    CLLocationCoordinate2D coordinates = CLLocationCoordinate2DMake(lat, lon);
    Annotation *annotation = [[Annotation alloc] init];
    annotation.coordinate = coordinates;
    annotation.title = title;
    annotation.subtitle = subTitle;
    annotation.categoryID = category;
    annotation.locationDetails = locationDetails;
    
    [self.mapView addAnnotation:annotation];
}

// http://stackoverflow.com/a/14951825
- (void)addFood {
    MKLocalSearchRequest *request = [[MKLocalSearchRequest alloc] init];
    request.naturalLanguageQuery = @"Restaurants";
    request.region = self.mapView.region;
    
    MKLocalSearch *localSearch = [[MKLocalSearch alloc] initWithRequest:request];
    [localSearch startWithCompletionHandler:^(MKLocalSearchResponse *response, NSError *error) {
        
        NSMutableArray *annotations = [NSMutableArray array];
        
        [response.mapItems enumerateObjectsUsingBlock:^(MKMapItem *item, NSUInteger idx, BOOL *stop) {
            Annotation *annotation = [[Annotation alloc] init];
            annotation.coordinate = item.placemark.location.coordinate;
            annotation.title = item.name;
            annotation.subtitle = item.placemark.addressDictionary[@"Street"]; //item.placemark.thoroughfare;
                //item.placemark.addressDictionary[CNMutablePostalAddress.street]; // kABPersonAddressStreetKey]; //item.phoneNumber;
            annotation.categoryID = PinCategoryFood;
            annotation.locationDetails = nil;
            
            [annotations addObject:annotation];
        }];
        
        [self.mapView addAnnotations:annotations];
    }];
}

// http://stackoverflow.com/a/10598646
- (void)addRoute:(CLLocationCoordinate2D [])coordinateArray {
    self.routeLine = [MKPolyline polylineWithCoordinates:coordinateArray count:2];
    [self.mapView setVisibleMapRect:[self.routeLine boundingMapRect]]; //If you want the route to be visible
    
    [self.mapView addOverlay:self.routeLine];
}  

#pragma mark - Helper Methods

- (NSString *)deviceLocation {
    return [NSString stringWithFormat:@"latitude: %f longitude: %f", self.locationManager.location.coordinate.latitude, self.locationManager.location.coordinate.longitude];
}

#pragma mark - Segue

- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    if ([[segue identifier] isEqualToString:@"showLocation"]) {
        //LocationViewController *lvc = (LocationViewController *)[segue destinationViewController];
        UINavigationController *navController = [segue destinationViewController];
        LocationViewController *lvc = (LocationViewController *)([navController viewControllers][0]);
        
        //http://stackoverflow.com/a/25483130
        Annotation *annotation = (Annotation *)[(MKAnnotationView *)sender annotation];
        lvc.location = annotation.locationDetails;
    }
}

#pragma mark - MapView Delegate

//https://developer.apple.com/library/content/documentation/UserExperience/Conceptual/LocationAwarenessPG/AnnotatingMaps/AnnotatingMaps.html#//apple_ref/doc/uid/TP40009497-CH6-SW1
- (MKAnnotationView *)mapView:(MKMapView *)theMapView viewForAnnotation:(id &amp;lt;MKAnnotation&amp;gt;)annotation {
    // Try to dequeue an existing pin view first (code not shown).
    
    // If no pin view already exists, create a new one.
    MKPinAnnotationView *customPinView = [[MKPinAnnotationView alloc] initWithAnnotation:annotation reuseIdentifier:@"anything"];
    customPinView.pinColor = MKPinAnnotationColorPurple;
    customPinView.animatesDrop = YES;
    customPinView.canShowCallout = YES;
    
    // Because this is an iOS app, add the detail disclosure button to display details about the annotation in another view.
    UIButton *rightButton = [UIButton buttonWithType:UIButtonTypeDetailDisclosure];
    //[rightButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
    //customPinView.rightCalloutAccessoryView = rightButton;
    
    NSString* imageName = @"Pin";
    
    if ([annotation isKindOfClass:[Annotation class]]) {
        long categoryId = [(Annotation *)annotation categoryID];
        
        switch (categoryId) {
            case PinCategoryUser:
                imageName = @"User";
                //customPinView.pinTintColor = MKPinAnnotationColorRed;
                break;
            case PinCategoryPub:
                imageName = @"Beer";
                customPinView.pinTintColor = [UIColor orangeColor];
                customPinView.rightCalloutAccessoryView = rightButton;
                break;
            case PinCategoryNightclub:
                imageName = @"Nightclub";
                //customPinView.pinTintColor = MKPinAnnotationColorPurple;
                break;
            case PinCategoryFood:
                imageName = @"Food";
                //customPinView.pinTintColor = MKPinAnnotationColorPurple;
                customPinView.pinTintColor = [UIColor redColor];
                break;
            default:
                imageName = @"Pin";
                //customPinView.pinTintColor = MKPinAnnotationColorRed;
                break;
        }
        //if([(OotAnnotation *)annotation categoryID] == PinCategoryUser) {
            // Add a custom image to the left side of the callout.
        //}
    }
        
    // Add a custom image to the left side of the callout.
    UIImageView *myCustomImage = [[UIImageView alloc] initWithImage:[UIImage imageNamed:imageName]];
    customPinView.leftCalloutAccessoryView = myCustomImage;
    
    return customPinView;
}

// http://stackoverflow.com/a/6941743
- (void)mapView:(MKMapView *)mapView annotationView:(MKAnnotationView *)view calloutAccessoryControlTapped:(UIControl *)control {
    if ([view.annotation isKindOfClass:[Annotation class]]) {
        [self performSegueWithIdentifier:@"showLocation" sender:view];
    }
}

-(MKOverlayView *)mapView:(MKMapView *)mapView viewForOverlay:(id&amp;lt;MKOverlay&amp;gt;)overlay {
    if(overlay == self.routeLine) {
        if(nil == self.routeLineView) {
            self.routeLineView = [[MKPolylineView alloc] initWithPolyline:self.routeLine];
            self.routeLineView.fillColor = [UIColor yellowColor];
            self.routeLineView.strokeColor = [UIColor yellowColor];
            self.routeLineView.lineWidth = 10;
        }
        return self.routeLineView;
    }
    return nil;
}

@end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/images/wordpress.png" alt="Wordpress" title="Wordpress"&gt; &lt;a href="https://alexhedley.wordpress.com/2018/02/03/mapkit/"&gt;Original Link&lt;/a&gt;&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>Goals for 2018</title>
			<link>https://alexhedley.github.io/blog/posts/goals-for-2018</link>
			<description>&lt;p&gt;&lt;strong&gt;Xamarin&lt;/strong&gt;&lt;/p&gt;</description>
			<author>AlexHedley</author>
			<guid>https://alexhedley.github.io/blog/posts/goals-for-2018</guid>
			<pubDate>Wed, 27 Dec 2017 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;&lt;strong&gt;Xamarin&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I'd started some training last year but didn't make any useful apps, I'd like to progress this to a production one in 2018.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;.NET&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I'd like to make progress in either or both of my Tracking app ideas.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;599CD&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Actually release it, I've been holding off hoping the API will be re-written, maybe I should just release, then update when it is.&lt;/p&gt;
&lt;p&gt;Although releasing the Android at the same time would be nice.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Certs&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;MS: Programming in HTML5 with JavaScript and CSS3&lt;/p&gt;
&lt;p&gt;MCSA: Web Applications&lt;/p&gt;
&lt;p&gt;MCPS: Developing ASP.NET MVC Web Applications&lt;/p&gt;
&lt;p&gt;Microsoft Certified Solution Developer: App Builder&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/images/wordpress.png" alt="Wordpress" title="Wordpress"&gt; &lt;a href="https://alexhedley.wordpress.com/2017/12/27/goals-for-2018/"&gt;Original Link&lt;/a&gt;&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>Goals for 2017 – Review</title>
			<link>https://alexhedley.github.io/blog/posts/goals-for-2017-review</link>
			<description>&lt;p&gt;&lt;strong&gt;599CD&lt;/strong&gt;&lt;/p&gt;</description>
			<author>AlexHedley</author>
			<guid>https://alexhedley.github.io/blog/posts/goals-for-2017-review</guid>
			<pubDate>Wed, 27 Dec 2017 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;&lt;strong&gt;599CD&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;iOS
&lt;ul&gt;
&lt;li&gt;Re-wrote API interaction using the Facade pattern&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Android
&lt;ul&gt;
&lt;li&gt;Asked a friend to help write this&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Still waiting on Rich to make a proper API.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Jam Jar&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Worked with PassSlot and have a local iOS app that creates them, with images&lt;/p&gt;
&lt;p&gt;&lt;a href="https://alexhedley.wordpress.com/2017/05/20/jam-jar-cinema-wallet-passes/"&gt;https://alexhedley.wordpress.com/2017/05/20/jam-jar-cinema-wallet-passes/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;.NET Apps&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I worked a little on a GNVQ tracking app for Learning Objectives, the back end is mostly there, still working on the UI.&lt;/p&gt;
&lt;p&gt;In general I was working on a major iOS project at work so didn't have a massive amount of spare time, learned lots of new APIs and techniques in ObjC and iOS dev which was great.&lt;/p&gt;
&lt;p&gt;Previous&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://alexhedley.wordpress.com/2017/01/02/goals-for-2017/"&gt;https://alexhedley.wordpress.com/2017/01/02/goals-for-2017/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://alexhedley.wordpress.com/2017/01/02/goals-for-2016-review/"&gt;https://alexhedley.wordpress.com/2017/01/02/goals-for-2016-review/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://alexhedley.wordpress.com/2016/01/01/goals-for-2016/"&gt;https://alexhedley.wordpress.com/2016/01/01/goals-for-2016/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/images/wordpress.png" alt="Wordpress" title="Wordpress"&gt; &lt;a href="https://alexhedley.wordpress.com/2017/12/27/goals-for-2017-review/"&gt;Original Link&lt;/a&gt;&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>UIBarButtonItem Image and Text</title>
			<link>https://alexhedley.github.io/blog/posts/uibarbuttonitem-image-and-text</link>
			<description>&lt;p&gt;I want to add an image and text to a BarButtonItem but can't in IB.&lt;/p&gt;</description>
			<author>AlexHedley</author>
			<guid>https://alexhedley.github.io/blog/posts/uibarbuttonitem-image-and-text</guid>
			<pubDate>Thu, 21 Sep 2017 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;I want to add an image and text to a BarButtonItem but can't in IB.&lt;/p&gt;
&lt;p&gt;I looked into&amp;nbsp;EdgeInsets but couldn't get them to work with the image.&lt;/p&gt;
&lt;p&gt;I'd also like to shrink the image&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;// https://stackoverflow.com/a/18853240/2895831
UIView \*rightButtonView = \[\[UIView alloc\]initWithFrame:CGRectMake(0, 0, 110, 50)\];

UIImage \*buttonImage = \[UIImage imageNamed:@"LocationArrow"\];
//UIEdgeInsets edgeInsets = UIEdgeInsetsMake(50, 50, 50, 50);
//UIImage \*buttonImage = \[\[UIImage imageNamed:@"LocationArrow"\] resizableImageWithCapInsets:edgeInsets\];
//UIImage(CGImage: originalImage!.CGImage!, scale: 5, orientation: originalImage!.imageOrientation)
// https://stackoverflow.com/a/38523085/2895831
buttonImage = \[UIImage imageWithCGImage:buttonImage.CGImage
 scale:4//CGImageGetHeight(buttonImage.CGImage)/2
 orientation:UIImageOrientationUp\];

UIButton \*rightButton = \[UIButton buttonWithType:UIButtonTypeSystem\];
rightButton.backgroundColor = \[UIColor clearColor\];
rightButton.frame = rightButtonView.frame;
\[rightButton setImage:buttonImage forState:UIControlStateNormal\];
\[rightButton setTitle:NSLocalizedString(@"My Location", nil) forState:UIControlStateNormal\];
rightButton.tintColor = \[UIColor whiteColor\];
rightButton.autoresizesSubviews = YES;
rightButton.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleLeftMargin;
rightButton.semanticContentAttribute = UISemanticContentAttributeForceRightToLeft;
\[rightButton addTarget:self action:@selector(myLocationAction:) forControlEvents:UIControlEventTouchUpInside\];

CGFloat padding = 10.0f;
\[rightButton setTitleEdgeInsets:UIEdgeInsetsMake(0, 0, 0, padding)\];
//\[rightButton setContentEdgeInsets:UIEdgeInsetsMake(0, 0, 0, padding)\];
//\[rightButton setContentEdgeInsets:UIEdgeInsetsMake(padding, padding, padding, padding)\];
//\[rightButton setImageEdgeInsets:UIEdgeInsetsMake(padding, 0, padding, 0)\]; //0, padding, 0, padding
//\[rightButton setImageEdgeInsets:UIEdgeInsetsMake(padding, padding, padding, padding)\];

\[rightButtonView addSubview:rightButton\];

UIBarButtonItem \*rightBarButton = \[\[UIBarButtonItem alloc\] initWithCustomView:rightButtonView\];
self.navigationItem.rightBarButtonItem = rightBarButton;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Image&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/a/38523085/2895831"&gt;https://stackoverflow.com/a/38523085/2895831&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;[UIImage imageWithCGImage:buttonImage.CGImage&amp;nbsp;scale:4&amp;nbsp;orientation:UIImageOrientationUp];
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pick your method to scale&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;CGImageGetHeight(buttonImage.CGImage)/2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;CGImageGetWidth(...)/DESIREDWIDTH
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;IB&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There is the handy&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bar Item&lt;/li&gt;
&lt;li&gt;Image Inset&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/images/wordpress.png" alt="Wordpress" title="Wordpress"&gt; &lt;a href="https://alexhedley.wordpress.com/2017/09/21/uibarbuttonitem-image-and-text/"&gt;Original Link&lt;/a&gt;&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>UIButton VerticalLayout</title>
			<link>https://alexhedley.github.io/blog/posts/uibutton-verticallayout</link>
			<description>&lt;p&gt;&lt;a href="https://stackoverflow.com/a/22621613/2895831"&gt;https://stackoverflow.com/a/22621613/2895831&lt;/a&gt;&lt;/p&gt;</description>
			<author>AlexHedley</author>
			<guid>https://alexhedley.github.io/blog/posts/uibutton-verticallayout</guid>
			<pubDate>Fri, 04 Aug 2017 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;&lt;a href="https://stackoverflow.com/a/22621613/2895831"&gt;https://stackoverflow.com/a/22621613/2895831&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[gist 87d1917da7745da9cd77033508e69243 /]&lt;/p&gt;
&lt;p&gt;&lt;code&gt;UIButton+VerticalLayout.m&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;//https://stackoverflow.com/a/22621613/2895831

@interface UIButton (VerticalLayout)  

- (void)centerVerticallyWithPadding:(float)padding;  
- (void)centerVertically;  

@end  

@implementation UIButton (VerticalLayout)  

- (void)centerVerticallyWithPadding:(float)padding {      
    CGSize imageSize = self.imageView.frame.size;  
    CGSize titleSize = self.titleLabel.frame.size;  
    CGFloat totalHeight = (imageSize.height + titleSize.height + padding);  
    self.imageEdgeInsets = UIEdgeInsetsMake(- (totalHeight - imageSize.height),
                                            0.0f,
                                            0.0f,
                                            - titleSize.width);
    self.titleEdgeInsets = UIEdgeInsetsMake(0.0f,
                                            - imageSize.width,
                                            - (totalHeight - titleSize.height),
                                            0.0f);
//     self.contentEdgeInsets = UIEdgeInsetsMake(0.0f,
//                                             0.0f,
//                                             titleSize.height,
//                                             0.0f);
    CGFloat inset = (self.frame.size.height - totalHeight)/2;
    self.contentEdgeInsets = UIEdgeInsetsMake(inset, 0.0f, inset, 0.0f);
}

- (void)centerVertically {  
    const CGFloat kDefaultPadding = 6.0f;
    [self centerVerticallyWithPadding:kDefaultPadding];  
}
@end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I added some buttons into a UIStackView but the image overlaps the button.&lt;/p&gt;
&lt;p&gt;[gallery ids="1046,1047" type="rectangular"]&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/verticalbutton-1.png" alt=""&gt;
&lt;img src="https://alexhedley.github.io/blog/images/verticalbutton-2.png" alt=""&gt;&lt;/p&gt;
&lt;p&gt;I modified the &lt;em&gt;contentEdgeInsets&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;CGFloat inset = (self.frame.size.height - totalHeight)/2;
self.contentEdgeInsets = UIEdgeInsetsMake(inset, 0.0f, inset, 0.0f);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/images/wordpress.png" alt="Wordpress" title="Wordpress"&gt; &lt;a href="https://alexhedley.wordpress.com/2017/08/04/uibutton-verticallayout/"&gt;Original Link&lt;/a&gt;&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>Pollen Today Widget</title>
			<link>https://alexhedley.github.io/blog/posts/pollen-today-widget</link>
			<description>&lt;p&gt;I want a today Widget to show pollen count.&lt;/p&gt;</description>
			<author>AlexHedley</author>
			<guid>https://alexhedley.github.io/blog/posts/pollen-today-widget</guid>
			<pubDate>Sun, 09 Jul 2017 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;I want a today Widget to show pollen count.&lt;/p&gt;
&lt;p&gt;I downloaded:&lt;/p&gt;
&lt;p&gt;Clarityn’s Pollen Forecast UK by Bayer HealthCare AG&lt;/p&gt;
&lt;p&gt;&lt;a href="https://appsto.re/gb/tPFfw.i"&gt;https://appsto.re/gb/tPFfw.i&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;They have a website&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.claritynallergy.co.uk/allergyforecast/?zip=X"&gt;http://www.claritynallergy.co.uk/allergyforecast/?zip=X&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It doesn't have the Widget I wanted so I started looking for an API.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;POST&lt;/strong&gt;&amp;nbsp;http://www.claritynallergy.co.uk/webservice/allergyforecast.php&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Header&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Accept: application/json&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Body&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Form URL-Encoded&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;zip=NE11EE&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Response&lt;/p&gt;
&lt;p&gt;&lt;code&gt;"{\\"Durham &amp;amp; Newcastle\\":{\\"1499515201\\":{\\"precipitation\\":8,\\"maxTemp\\":21,\\"minTemp\\":16,\\"pollenLevel\\":\\"H\\",\\"humidity\\":83,\\"windSpeed\\":7,\\"weatherCode\\":7,\\"uvIndex\\":5,\\"pollenType\\":\\"Grass\\"},\\"1499601600\\":{\\"precipitation\\":18,\\"maxTemp\\":18,\\"minTemp\\":15,\\"pollenLevel\\":\\"H\\",\\"humidity\\":80,\\"windSpeed\\":18,\\"weatherCode\\":7,\\"uvIndex\\":4,\\"pollenType\\":\\"Grass\\"},\\"1499688000\\":{\\"precipitation\\":23,\\"maxTemp\\":18,\\"minTemp\\":14,\\"pollenLevel\\":\\"M\\",\\"humidity\\":69,\\"windSpeed\\":11,\\"weatherCode\\":3,\\"uvIndex\\":7,\\"pollenType\\":\\"Grass\\"}}}"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Images&lt;/p&gt;
&lt;p&gt;"http://www.claritynallergy.co.uk/static/media/images/claritynallergy/7-trans.png" :&lt;img src="https://alexhedley.github.io/blog/images/3-trans.png" alt=""&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I found Benadryl has one.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.benadryl.co.uk/social-pollen-count"&gt;https://www.benadryl.co.uk/social-pollen-count&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;GET&lt;/strong&gt; &lt;a href="https://socialpollencount.co.uk/api/forecast?location=%5C%5B**LAT**,**LON**%5C%5D"&gt;https://socialpollencount.co.uk/api/forecast?location=\[**LAT**,**LON**\]&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Response&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{"status\_code":"200 OK","date":"2017-07-02T07:13:47+00:00","forecast":\[{"date":"2017-06-29T08:00:01+00:00","pollen\_count":"Low"},{"date":"2017-06-30T08:00:01+00:00","pollen\_count":"Low"},{"date":"2017-07-01T08:00:01+00:00","pollen\_count":"High"},{"date":"2017-07-02T08:00:01+00:00","pollen\_count":"High","temperature":"18","weather\_code":"01","weather":"Sunny"},{"date":"2017-07-03T08:00:01+00:00","pollen\_count":"High","temperature":"18","weather\_code":"07","weather":"Medium-level cloud"},{"date":"2017-07-04T08:00:01+00:00","pollen\_count":"Moderate","temperature":"14","weather\_code":"12","weather":"Light rain"}\]}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Images&lt;/p&gt;
&lt;p&gt;"https://socialpollencount.co.uk/images/content/weather/07.pnp" :&lt;img src="https://alexhedley.github.io/blog/images/07.png" alt=""&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;App: &lt;a href="https://itunes.apple.com/gb/app/benadryl-social-pollen-count/id638068252?mt=8"&gt;https://itunes.apple.com/gb/app/benadryl-social-pollen-count/id638068252?mt=8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;App doesn't exist.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Progress I've started building my own&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/img_4314.png" alt=""&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/img_4315-1.png" alt=""&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/img_4317.jpg" alt=""&gt;&lt;/p&gt;
&lt;p&gt;The Widget needs a lot of work but the basis is there, I've built a framework that gets all the data. Now to finish the UI...&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/images/wordpress.png" alt="Wordpress" title="Wordpress"&gt; &lt;a href="https://alexhedley.wordpress.com/2017/07/09/pollen-today-widget/"&gt;Original Link&lt;/a&gt;&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>Carousel View</title>
			<link>https://alexhedley.github.io/blog/posts/carousel-view</link>
			<description>&lt;p&gt;&lt;strong&gt;iCarousel&lt;/strong&gt;&lt;/p&gt;</description>
			<author>AlexHedley</author>
			<guid>https://alexhedley.github.io/blog/posts/carousel-view</guid>
			<pubDate>Mon, 22 May 2017 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;&lt;strong&gt;iCarousel&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nicklockwood/iCarousel"&gt;https://github.com/nicklockwood/iCarousel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I wanted to add an animation when dismissing, a button at the top and bottom of the view, one to dismiss, one to save, and move off in that direction.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/AlexHedley/c551b417c3e02820a1eae04124003ee6"&gt;https://gist.github.com/AlexHedley/c551b417c3e02820a1eae04124003ee6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;iCarousel.m&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;- (void)removeItemAtIndex:(NSInteger)index animated:(BOOL)animated {
  //Amended method below to slide Up/Down
}

- (void)saveItemAtIndex:(NSInteger)index animated:(BOOL)animated {
    index = [self clampedIndex:index];
    UIView *itemView = [self itemViewAtIndex:index];

    [UIView beginAnimations:nil context:nil];
    [UIView setAnimationDuration:1.0];
    [UIView setAnimationDelegate:itemView.superview];
    [UIView setAnimationDidStopSelector:@selector(removeFromSuperview)];
    [self performSelector:@selector(queueItemView:) withObject:itemView afterDelay:0.1];
    itemView.superview.layer.opacity = 0.0;
    itemView.frame = CGRectOffset(itemView.frame, 0, 250); //Swap to -250 to change direction
    [UIView commitAnimations];

    [UIView beginAnimations:nil context:nil];
    [UIView setAnimationDelay:0.1];
    [UIView setAnimationDuration:INSERT_DURATION];
    [UIView setAnimationDelegate:self];
    [UIView setAnimationDidStopSelector:@selector(depthSortViews)];
    [self removeViewAtIndex:index];
    _numberOfItems --;
    _wrapEnabled = !![self valueForOption:iCarouselOptionWrap withDefault:_wrapEnabled];
    [self updateNumberOfVisibleItems];
    _scrollOffset = self.currentItemIndex;
    [self didScroll];
    [UIView commitAnimations];
}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/AlexHedley/528148bf47b634fda5fb007e4a5d9638"&gt;https://gist.github.com/AlexHedley/528148bf47b634fda5fb007e4a5d9638&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;TinderSimpleSwipeCards - &lt;a href="https://github.com/cwRichardKim/TinderSimpleSwipeCards/issues/12"&gt;https://github.com/cwRichardKim/TinderSimpleSwipeCards/issues/12&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;CardView.h&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;#import &amp;lt;UIKit/UIKit.h&amp;gt;


@protocol CardDelegate;

typedef NS_ENUM(NSUInteger, kCardState) {
    kCardStateIdle = 0,
    kCardStateMoving = 1,
    kCardStateGone = 2
};

// The Position of the Card
typedef NS_ENUM(NSInteger, kCardPosition) {
    kCardPositionTop = 0,
    kCardPositionBack = 1
};

/*!
 *    Implements the Views inside the Cards
 */
@interface CardView : UIView

#pragma mark - Properties

/*!
 *    Defines the current state of the card
 */
@property (nonatomic) kCardState state;

/*!
 *    The Weight of the Card indicates its position in the stack
 */
@property (nonatomic) kCardPosition position;

/*!
 * The delegate that will listen to the notifications
 * on created on pan gesture recognizers
 */
@property (nonatomic, weak) id &amp;lt;CardDelegate&amp;gt; delegate;

/*!
 *    Where in the array is located the  view
 */
@property (nonatomic) NSInteger index;

#pragma mark - Methods

#pragma mark Init

/*!
 * Designated Initializer
 *
 * This method inits the view
 * and set the  to fetch
 * also renders the view with 's data
 *
 * @param CGRect frame for view's bounds
 * @param ViewDelegate delegate to send events
 * @param  *  to render the view info
 */
- (void) setFrame:(CGRect)frame delegate:(id&amp;lt;CardDelegate&amp;gt;) delegate;

#pragma mark Instance

/*!
 * Swipes the view to the left
 * programatically
 */
- (void) swipeLeft;

/*!
 * Swipes the view to the right
 * programatically
 */
- (void) swipeRight;

/*!
 * Swipes the view up
 * programatically
 */
- (void) swipeUp;

/*!
 * Swipes the view down
 * programatically
 */
- (void) swipeDown;

/*!
 *    Cancels a Swipe
 */
- (void) cancelSwipe;

@end


@protocol CardDelegate &amp;lt;NSObject&amp;gt;

#pragma mark - Delegate Methods

/*!
 * Method called when the view will begin pan gesture
 * @param Card * Card
 */
- (void) willBeginSwipeInCard : (CardView *) card;

/*!
 * Method called when the view did end pan gesture
 * @param Card * Card
 */
- (void) didEndSwipeInCard : (CardView *) card;

/*!
 * Method called when the view did not reach a detected position
 * @param Card * Card
 */
- (void) didCancelSwipeInCard : (CardView *) card;

/*!
 * Method called when the view was swiped left
 * @param Card * Card
 */
- (void) swipedLeftInCard : (CardView *) card;

/*!
 * Method called when the view was swiped right
 * @param Card * Card
 */
- (void) swipedRightInCard : (CardView *) card;

/*!
 * Method called when the view was swiped up
 * @param Card * Card
 */
- (void) swipedUpInCard : (CardView *) card;

/*!
 * Method called when the view was swiped down
 * @param Card * Card
 */
- (void) swipedDownInCard : (CardView *) card;

/*!
 * Method called when the view button was pressed
 * @param Card * Card;
 */
- (void) wasTouchedDownInCard : (CardView *) card;

/*!
 *    Method called when the state was changed
 *
 *    @param  Card * Card;
 */
- (void) didChangeStateInCard: (CardView *) card;

/*!
 *    Ask the delegate if the card should move
 *
 *    @param Card the card
 *
 *    @return YES if the card should move
 */
- (BOOL) shouldMoveCard: (CardView *) card;

@end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;CardView.m&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-objectivec"&gt;#import "CardView.h"

// Constants Declaration

// This constant represent the distance from the center
// where the action applies. A higher value means that
// the user needs to draw the view further in order for
// the action to be executed.

#define ACTION_MARGIN 120

// This constant is the distance from the center. But vertically

#define Y_ACTION_MARGIN 100


// This constant represent how quickly the view shrinks.
// The view will shrink when is beign moved out the visible
// area.
// A Higher value means slower shrinking

#define SCALE_QUICKNESS 4

// This constant represent how much the view shrinks.
// A Higher value means less shrinking

#define SCALE_MAX .93

// This constant represent the rotation angle

#define ROTATION_ANGLE M_PI / 8

// This constant represent the maximum rotation angle
// allowed in radiands.
// A higher value enables more rotation for the view

#define ROTATION_MAX 1

// This constant defines how fast
// the rotation should be.
// A higher values means a faster rotation.

#define ROTATION_QUICKNESS 320

@interface CardView()

// Internal Variables
@property (nonatomic) CGFloat xFromCenter;

@property (nonatomic) CGFloat yFromCenter;

@property (nonatomic) CGPoint originalPoint;

@end

@implementation CardView

@synthesize state = _state;

- (kCardState) state {
    if (!_state) {
        _state = kCardStateIdle;
    }

    return _state;
}

- (void) setState:(kCardState) state {

    if (_state != state) {
        _state = state;
        [self.delegate didChangeStateInCard:self];
    }
}

- (kCardPosition) position {
    if (!_position) {
        _position = kCardPositionTop;
    }

    return _position;
}

#pragma mark - Init

/*!
 * Designated Initializer
 *
 * This method inits the view
 * and set the feed to fetch
 * also renders the view with feed's data
 *
 * @param CGRect frame for view's bounds
 * @param CardDelegate delegate to send events
 */

- (void) setFrame:(CGRect)frame delegate:(id&amp;lt;CardDelegate&amp;gt;) delegate {

    self.frame = frame;

    self.delegate = delegate;

    [self setupView];
    [self registerSwipeGestures];
}

#pragma mark Init Helper Methods

/*!
 * Round corners of the view
 * and draw a shadow
 * Do another view related
 * actions required on init
 */
- (void) setupView {

    // Draw Shadow
    // And round the view
    self.layer.cornerRadius = 10;
    self.layer.shadowRadius = 3;
    self.layer.shadowOpacity = 0.2;
    self.layer.shadowOffset = CGSizeMake(1,1);

}

/*!
 * Register Pan Gesture
 * and delegates
 */
- (void) registerSwipeGestures {

    UIPanGestureRecognizer * panRecognizer = [[UIPanGestureRecognizer alloc] initWithTarget:self action:@selector(handlePanGesture:)];

    [self addGestureRecognizer:panRecognizer];

}


#pragma mark Pan Gesture Recognizer Handlers

/*!
 * This is the main method for motion detection
 * its called several times a second when the
 * fingers are moved across the screen.
 */
- (void) handlePanGesture: (UIPanGestureRecognizer *) panRecognizer {

    // This extracts the coordinate data from the swipe movement.
    // how much did fingers move.

    // We need to know the X position.
    // A positive value means movement to the right.
    // A negative value means movement to the left.

    self.xFromCenter = [panRecognizer translationInView:self].x;

    // We need to know the Y position.
    // A positive value means up movement.
    // A negative value means down movement.

    self.yFromCenter = [panRecognizer translationInView:self].y;

    // Now we check on wich state our swipe is
    // if is its starting, in the middle or ended
    // the swiping.

    switch (panRecognizer.state) {

            // Swiping just started
        case UIGestureRecognizerStateBegan: {

            // We will save the original point
            // when we started
            self.originalPoint = self.center;

            if (self.delegate) {

                if ([self.delegate shouldMoveCard:self]) {

                    // And tell the delegate
                    // that the movement just started
                    [self.delegate willBeginSwipeInCard:self];

                }

            }


            break;
        }

            // Swiping is in course
        case UIGestureRecognizerStateChanged: {

            // Animate the view

            if (self.delegate) {

                // If delegate is present
                // ask if it should move the card
                if ([self.delegate shouldMoveCard:self]) {

                    [self animateView];
                }

            } else {
                [self animateView];
            }

            break;
        }

        // Swiping ended
        case UIGestureRecognizerStateEnded: {

            if (self.delegate) {

                if ([self.delegate shouldMoveCard:self]) {

                    [self detectSwipeDirection];
                }

            } else {
                [self detectSwipeDirection];
            }

            break;
        }

        default:
            break;
    }
}


#pragma mark Helper Methods

/*!
 * Rotates the view
 * and changes its scale and position
 */
- (void) animateView {

    // Do some black magic math
    // for rotating and scale

    // Gets the rotation quickness
    // see constants.

    CGFloat rotationQuickness = MIN(self.xFromCenter / ROTATION_QUICKNESS, ROTATION_MAX);

    // Change the rotation in radians
    CGFloat rotationAngle = (CGFloat) (ROTATION_ANGLE * rotationQuickness);

    // the height will change when the view reaches certain point
    CGFloat scale = MAX(1 - fabsf(rotationQuickness) / SCALE_QUICKNESS, SCALE_MAX);

    // move the object center depending on the coordinate
    self.center = CGPointMake(self.originalPoint.x + self.xFromCenter,
                                   self.originalPoint.y + self.yFromCenter);


    // rotate by the angle
    CGAffineTransform rotateTransform = CGAffineTransformMakeRotation(rotationAngle);

    // scale depending on the rotation
    CGAffineTransform scaleTransform = CGAffineTransformScale(rotateTransform, scale, scale);

    // apply transformations
    self.transform = scaleTransform;

    // Change state
    [self changeStateToMoving];
}

/*!
 * With all the values fetched
 * from the pan gesture
 * gets the direction of the swipe
 * when the swipe is done
 */
- (void) detectSwipeDirection {

    if (self.xFromCenter &amp;gt; ACTION_MARGIN) {

        [self performRightAnimation];

    } else if (self.xFromCenter &amp;lt; - ACTION_MARGIN) {

        [self performLeftAnimation];

    } else if(self.yFromCenter &amp;lt; - Y_ACTION_MARGIN) {

        [self performUpAnimation];

    } else if(self.yFromCenter &amp;gt;  Y_ACTION_MARGIN) {

        [self performDownAnimation];

    } else {

        [self performCenterAnimation];

    }

    // And tell the delegate
    // that the swipe just finished
    [self.delegate didEndSwipeInCard:self];
}

- (void) changeStateToIdle {

    // Idle state indicates that the card
    // is showing in the view, but not moving.
    self.state = kJMPTFeedCardStateIdle;
}

- (void) changeStateToGone {

    // Gone state indicates that the card
    // was removed from the view
    self.state = kJMPTFeedCardStateGone;
}

- (void) changeStateToMoving {

    self.state = kJMPTFeedCardStateMoving;

    // Cancel Swipe if Moving but not should
    if (self.delegate &amp;amp;&amp;amp; ![self.delegate shouldMoveCard:self]) {
        [self performCenterAnimation];
    }
}

#pragma mark Animation Methods

/*!
 * The view will go to the right
 */
- (void) performRightAnimation {

    CGPoint finishPoint = CGPointMake(500, 2 * self.yFromCenter + self.originalPoint.y);

    [UIView animateWithDuration:0.3  delay:0 options:UIViewAnimationOptionBeginFromCurrentState animations:^{

        self.center = finishPoint;

    } completion:^(BOOL finished) {

        [self removeFromSuperview];

        [self changeStateToGone];

        [self.delegate swipedRightInCard:self];
    }];

}

/*!
 * The view will got to the left
 */
- (void) performLeftAnimation {

    CGPoint finishPoint = CGPointMake(-500, 2 * self.yFromCenter + self.originalPoint.y);

    [UIView animateWithDuration:0.3  delay:0 options:UIViewAnimationOptionBeginFromCurrentState animations:^{

        self.center = finishPoint;

    } completion:^(BOOL finished) {

        [self removeFromSuperview];

        [self changeStateToGone];

        [self.delegate swipedLeftInCard:self];
    }];

}

/*!
 * The view will go up
 * do not remove from view
 * just perfom some goofy moves
 */
- (void) performUpAnimation {

    [UIView animateWithDuration:0.7
                          delay:0
         usingSpringWithDamping:0.56
          initialSpringVelocity:0.0
                        options:UIViewAnimationOptionBeginFromCurrentState
                     animations:^{

                         self.center = self.originalPoint;

                         self.transform = CGAffineTransformMakeRotation(0);

                     } completion:^(BOOL finished) {
                         [self changeStateToIdle];

                         [self.delegate swipedUpInCard:self];
                     }];
}

/*!
 * The view will go down
 * do not remove from view
 * just perfom some goofy moves
 */
- (void) performDownAnimation {

    [UIView animateWithDuration:0.7
                          delay:0
         usingSpringWithDamping:0.56
          initialSpringVelocity:0.0
                        options:UIViewAnimationOptionBeginFromCurrentState
                     animations:^{

                         self.center = self.originalPoint;

                         self.transform = CGAffineTransformMakeRotation(0);

                     } completion:^(BOOL finished) {
                         [self changeStateToIdle];
                         [self.delegate swipedDownInCard:self];
                     }];

}

/*!
 * The view will go to the center
 * (cancel swipe) and reset the values
 */
- (void) performCenterAnimation {

    [UIView animateWithDuration:0.7
                          delay:0
         usingSpringWithDamping:0.56
          initialSpringVelocity:0.0
                        options:UIViewAnimationOptionBeginFromCurrentState
                     animations:^{

                         self.center = self.originalPoint;

                         self.transform = CGAffineTransformMakeRotation(0);

                     } completion:^(BOOL finished) {

                         [self changeStateToIdle];
                         [self.delegate didCancelSwipeInCard:self];
                     }];
}

#pragma mark - Programatically Swipe Methods

- (void) swipeLeft {

    // The same animation but with a delay
    CGPoint finishPoint = CGPointMake(-500, 2 * self.yFromCenter + self.originalPoint.y);

    [self changeStateToMoving];

    [UIView animateWithDuration:0.3  delay:0.3 options:UIViewAnimationOptionBeginFromCurrentState animations:^{

        self.center = finishPoint;

    } completion:^(BOOL finished) {

        if (finished) {
            [self removeFromSuperview];
            [self changeStateToGone];
            [self.delegate swipedLeftInCard:self];
        }

    }];
}

- (void) swipeRight {

    // The same animation, but with a delay
    CGPoint finishPoint = CGPointMake(500, 2 * self.yFromCenter + self.originalPoint.y);

    [self changeStateToMoving];

    [UIView animateWithDuration:0.3  delay:0.3 options:UIViewAnimationOptionBeginFromCurrentState animations:^{

        self.center = finishPoint;

    } completion:^(BOOL finished) {

        if (finished) {
            [self removeFromSuperview];
            [self changeStateToGone];
            [self.delegate swipedRightInCard:self];
        }
    }];
}

- (void) swipeUp {
    //TODO: Implement this
}

- (void) swipeDown {
    //TODO: Implement this
}


- (void) cancelSwipe {
    [self performCenterAnimation];
}

#pragma mark - IBActions

- (IBAction) cardButton: (id)sender {
    [self.delegate wasTouchedDownInCard:self];
}

@end
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;I needed a Carousel like control but swipe up/down actions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/nicklockwood/iCarousel"&gt;https://github.com/nicklockwood/iCarousel&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MDCSwipeToChoose&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/modocache/MDCSwipeToChoose"&gt;https://github.com/modocache/MDCSwipeToChoose&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;TinderSimpleSwipeCards&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cwRichardKim/TinderSimpleSwipeCards"&gt;https://github.com/cwRichardKim/TinderSimpleSwipeCards&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;@&lt;a href="https://github.com/clsource"&gt;clsource&lt;/a&gt;&amp;nbsp;added other directions&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cwRichardKim/TinderSimpleSwipeCards/issues/12"&gt;https://github.com/cwRichardKim/TinderSimpleSwipeCards/issues/12&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Directions&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/AlexHedley/528148bf47b634fda5fb007e4a5d9638"&gt;https://gist.github.com/AlexHedley/528148bf47b634fda5fb007e4a5d9638&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/images/wordpress.png" alt="Wordpress" title="Wordpress"&gt; &lt;a href="https://alexhedley.wordpress.com/2017/05/22/carousel-view/"&gt;Original Link&lt;/a&gt;&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>Jam Jar Cinema Wallet Passes</title>
			<link>https://alexhedley.github.io/blog/posts/jam-jar-cinema-wallet-passes</link>
			<description>&lt;p&gt;My local cinema is Awesome!&lt;/p&gt;</description>
			<author>AlexHedley</author>
			<guid>https://alexhedley.github.io/blog/posts/jam-jar-cinema-wallet-passes</guid>
			<pubDate>Sat, 20 May 2017 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;My local cinema is Awesome!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.jamjarcinema.com/"&gt;http://www.jamjarcinema.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I want to create passes to keep a memento of the films I've seen. I order online so don't get ticket stubs from the venue and I like having a digital copy, like CineWorld does.&lt;/p&gt;
&lt;p&gt;There are a number of websites which allow you to make Wallet Passes.&lt;/p&gt;
&lt;p&gt;I've recently tried PassSlot (&lt;a href="https://www.passslot.com/"&gt;https://www.passslot.com&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/passslot.png" alt="PassSlot" title="PassSlot"&gt;&lt;/p&gt;
&lt;p&gt;It has a free tier which allows you to create 1 PassID, multiple templates, and a set limit of passes, which is all I need.&lt;/p&gt;
&lt;p&gt;It has an SDK which is great.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/passslot/passslot-ios-sdk"&gt;https://github.com/passslot/passslot-ios-sdk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I created my Template with variables for the various pieces of information and now I have an iOS app which allows me to fill in the values, pick an image and create a pass.&lt;/p&gt;
&lt;p&gt;It uses the iTunes Artwork&amp;nbsp;Finder from Ben Dodson.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bendodson.com/projects/itunes-artwork-finder/"&gt;https://bendodson.com/projects/itunes-artwork-finder/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[gallery ids="1003,1004,1005,1006,1007,1008,1009,1010" type="rectangular"]&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/jjc-passes-1.png" alt=""&gt;
&lt;img src="https://alexhedley.github.io/blog/images/jjc-passes-2.png" alt=""&gt;
&lt;img src="https://alexhedley.github.io/blog/images/jjc-passes-3.png" alt=""&gt;
&lt;img src="https://alexhedley.github.io/blog/images/jjc-passes-4.png" alt=""&gt;
&lt;img src="https://alexhedley.github.io/blog/images/jjc-passes-5.png" alt=""&gt;
&lt;img src="https://alexhedley.github.io/blog/images/jjc-passes-6.png" alt=""&gt;
&lt;img src="https://alexhedley.github.io/blog/images/jjc-passes-7.png" alt=""&gt;
&lt;img src="https://alexhedley.github.io/blog/images/jjc-passes-8.png" alt=""&gt;&lt;/p&gt;
&lt;p&gt;Wallet&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/img_4042.png" alt=""&gt;
&lt;img src="https://alexhedley.github.io/blog/images/img_4043.png" alt=""&gt;
&lt;img src="https://alexhedley.github.io/blog/images/img_4044.png" alt=""&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/wallet/"&gt;https://developer.apple.com/wallet/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/reference/passkit"&gt;https://developer.apple.com/reference/passkit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;The PassSlot API is available on 'mashape'&lt;/p&gt;
&lt;p&gt;The documentation mentions&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Other Platforms -&amp;nbsp;The PassSlot API is also available through mashape. They have client libraries for Node, Ruby, Java, .NET, Windows 8&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;On the marketplace&lt;/p&gt;
&lt;p&gt;&lt;a href="https://market.mashape.com/passslot/passbook"&gt;https://market.mashape.com/passslot/passbook&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There is a button for open in Paw. I can't get it to work at the moment.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I'd started making a Mac app to create Wallet Passes.&lt;/p&gt;
&lt;p&gt;I followed the RW tutorials on PassKit but my PHP was rusty so never got that side working.&lt;/p&gt;
&lt;p&gt;I got the local one working which used the sign tool and created all the files&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pass.json&lt;/li&gt;
&lt;li&gt;manifest.json&lt;/li&gt;
&lt;li&gt;.pkpass&lt;/li&gt;
&lt;li&gt;etc&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/jjc-passes-mac-1.png" alt="JJC Passes (Mac) (1)" title="JJC Passes (Mac) (1)"&gt;&lt;/p&gt;
&lt;p&gt;But when I tried to add them to my phone I ran into issues, I raised a bug will Apple and they are working on something.&lt;/p&gt;
&lt;p&gt;The pass has to be served over SSL.&lt;/p&gt;
&lt;p&gt;I made my own Contact Card:&amp;nbsp;&lt;a href="https://alexhedley.wordpress.com/2014/12/29/passbook/"&gt;https://alexhedley.wordpress.com/2014/12/29/passbook/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/images/wordpress.png" alt="Wordpress" title="Wordpress"&gt; &lt;a href="https://alexhedley.wordpress.com/2017/05/20/jam-jar-cinema-wallet-passes/"&gt;Original Link&lt;/a&gt;&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
	</channel>
</rss>