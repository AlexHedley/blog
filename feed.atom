<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<id>https://alexhedley.github.io/blog</id>
	<title>Alex Hedley</title>
	<link rel="self" href="https://alexhedley.github.io/blog" />
	<rights>Copyright © 2025</rights>
	<updated>2025-01-25T18:14:05Z</updated>
	<logo>https://alexhedley.github.io/blog/images/banner.png</logo>
	<subtitle>Welcome to my blog!</subtitle>
	<entry>
		<id>https://alexhedley.github.io/blog/posts/blashing-blazingstory</id>
		<title>Blashing - Blazing Story</title>
		<author>
			<name>alexhedley</name>
		</author>
		<link href="https://alexhedley.github.io/blog/posts/blashing-blazingstory" />
		<link rel="enclosure" type="image" href="https://alexhedley.github.io/blog/images/banner.png" />
		<updated>2025-01-25T00:00:00Z</updated>
		<content>&lt;!-- # Blashing - Blazing Story --&gt;
&lt;p&gt;Having found &lt;a href="https://alexhedley.github.io/blog/blazingstory"&gt;Blazing Story&lt;/a&gt; I had to try it out with some of my own Blazor Components. I thought why not use &lt;a href="https://alexhedley.github.io/blog/the-beginning-of-blashing"&gt;Blashing&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I followed the thorough steps in their readme and got to creating the required &lt;code&gt;stories.razor&lt;/code&gt; files. Added the required arguments and ran the app:&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/blashing/blashing-blazorstory.png" alt="Example" title="Example"&gt;&lt;/p&gt;
&lt;p&gt;There's a few errors thrown when clicking on the different examples which I need to look into but it's just the beginning.&lt;/p&gt;
&lt;p&gt;Such a well made project :).&lt;/p&gt;
&lt;h2 id="links"&gt;🔗 Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;branch: &lt;a href="https://github.com/AlexHedley/blashing/tree/blazingstories"&gt;https://github.com/AlexHedley/blashing/tree/blazingstories&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;PR: &lt;a href="https://github.com/AlexHedley/blashing/pull/162"&gt;https://github.com/AlexHedley/blashing/pull/162&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;code: &lt;a href="https://github.com/AlexHedley/blashing"&gt;https://github.com/AlexHedley/blashing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="related"&gt;Related&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://alexhedley.github.io/blog/blazingstory"&gt;Blazing Story&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://alexhedley.github.io/blog/the-beginning-of-blashing"&gt;The Beginning of Blashing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
		<summary>Adding Blazing Story to Blashing</summary>
	</entry>
	<entry>
		<id>https://alexhedley.github.io/blog/posts/blazingstory</id>
		<title>Blazing Story</title>
		<author>
			<name>alexhedley</name>
		</author>
		<link href="https://alexhedley.github.io/blog/posts/blazingstory" />
		<link rel="enclosure" type="image" href="https://alexhedley.github.io/blog/posts/images/blazor/blazing-story/blazing-story.png" />
		<updated>2025-01-24T00:00:00Z</updated>
		<content>&lt;!-- # Blazing Story --&gt;
&lt;p&gt;Over the past couple of years I've been working with React and on occasion there have been a &lt;a href="https://storybook.js.org/"&gt;Storybook&lt;/a&gt; of components for the UI libraries I've been working with. This is an excellent way to have examples of the control(s) you may need to implement in your site. It gives you options to try different parameter combinations, see it in action and even grab a copy of the code needed to add it to your page(s).&lt;/p&gt;
&lt;p&gt;In my pursuit to have all these great options but in .NET I was lucky enough to come across &lt;a href="https://jsakamoto.github.io/BlazingStory/"&gt;Blazing Story&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The clone of "&lt;a href="https://storybook.js.org/"&gt;Storybook&lt;/a&gt;" for Blazor, a frontend workshop for building UI components and pages in isolation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/blazor/blazing-story/blazing-story.png" alt="Blazing Story" title="Blazing Story"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The "Blazing Story" is built on almost 100% Blazor native (except only a few JavaScript helper codes), so you don't have to care about npm, package.json, webpack, and any JavaScript/TypeScript code. You can create a UI catalog application on the Blazor way!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;See it in action: &lt;a href="https://jsakamoto.github.io/BlazingStory/"&gt;https://jsakamoto.github.io/BlazingStory/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It's very simple to setup.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dotnet new install BlazingStory.ProjectTemplates&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Add a new Project to your Solution. Add your components Project to this new &lt;em&gt;Stories&lt;/em&gt; Project. Add a new &lt;code&gt;[COMPONENT].stories.razor&lt;/code&gt; Razor file and setup the properties.&lt;/p&gt;
&lt;p&gt;If you choose the WASM version you can then deploy it via &lt;a href="https://pages.github.com/"&gt;GitHub Pages&lt;/a&gt; too!&lt;/p&gt;
&lt;p&gt;There's a discussion showing how: &lt;a href="https://github.com/jsakamoto/BlazingStory/discussions/33"&gt;#33&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jsakamoto/PublishSPAforGitHubPages.Build"&gt;https://github.com/jsakamoto/PublishSPAforGitHubPages.Build&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class="language-xml"&gt;  &amp;lt;ItemGroup&amp;gt;
    &amp;lt;PackageReference Include="PublishSPAforGitHubPages.Build" Version="3.0.0" /&amp;gt;
  &amp;lt;/ItemGroup&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I usually just use &lt;code&gt;sed&lt;/code&gt; in the GHA.&lt;/p&gt;
&lt;p&gt;I quickly built an example and had it published in about 5 mins:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AlexHedley/BlazingStoryExample"&gt;https://github.com/AlexHedley/BlazingStoryExample&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://alexhedley.github.io/BlazingStoryExample/"&gt;https://alexhedley.github.io/BlazingStoryExample/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Looking forward to adding more of the features and working with some components I've built.&lt;/p&gt;
&lt;h2 id="links"&gt;🔗 Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jsakamoto/BlazingStory"&gt;Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jsakamoto.github.io/BlazingStory/"&gt;Website&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
		<summary>The clone of "Storybook" for Blazor, a frontend workshop for building UI components and pages in isolation.</summary>
	</entry>
	<entry>
		<id>https://alexhedley.github.io/blog/posts/statiq-plugins-reading-time</id>
		<title>Statiq - Plugins - Reading Time</title>
		<author>
			<name>alexhedley</name>
		</author>
		<link href="https://alexhedley.github.io/blog/posts/statiq-plugins-reading-time" />
		<link rel="enclosure" type="image" href="https://alexhedley.github.io/blog/posts/images/statiq-web.svg" />
		<updated>2024-12-30T00:00:00Z</updated>
		<content>&lt;!-- # Statiq - Plugins --&gt;
&lt;p&gt;I've been keeping a list of Statiq Community extensions and uses on the main Discussions list:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Plugins: &lt;a href="https://github.com/orgs/statiqdev/discussions/223"&gt;https://github.com/orgs/statiqdev/discussions/223&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Themes: &lt;a href="https://github.com/orgs/statiqdev/discussions/227"&gt;https://github.com/orgs/statiqdev/discussions/227&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I was reviewing some blog posts and found a few from &lt;em&gt;Jeremy Davis&lt;/em&gt;, see &lt;a href="https://blog.jermdavis.dev/tags/statiq/"&gt;Statiq&lt;/a&gt; 🏷 tag.&lt;/p&gt;
&lt;p&gt;To make this easier to add into my own blog I decided to make a new project: &lt;a href="https://github.com/alexhedley/statiq.plugins"&gt;Statiq.Plugins&lt;/a&gt; and port the features there.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Adding reading time estimates to blog posts from @ Jeremy Davis&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.jermdavis.dev/posts/2023/reading-time-estimates-statiq"&gt;https://blog.jermdavis.dev/posts/2023/reading-time-estimates-statiq&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;In your &lt;code&gt;appsettings.json&lt;/code&gt; add a new property &lt;code&gt;ReadingSpeed&lt;/code&gt; and set it to your desired value:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;"ReadingSpeed": 200&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You can then override the &lt;code&gt;input/_header.cshtml&lt;/code&gt; of your theme and place the calculated time after the tags.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;span&amp;gt;~@Model.GetString("ReadingTime") minutes&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Example&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;You can see an example on my test site: &lt;a href="https://alexhedley.com/statiqweb-example/posts/1"&gt;https://alexhedley.com/statiqweb-example/posts/1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/statiq/reading_time.png" alt="Reading Time" title="Reading Time"&gt;&lt;/p&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/statiq/reading_time-jd.png" alt="Reading Time" title="Reading Time"&gt;&lt;/p&gt;
&lt;p&gt;In the future I'm looking to add more functionality. I've raised a number of &lt;a href="https://github.com/AlexHedley/statiq.plugins/issues"&gt;Issues&lt;/a&gt; to track them. If you have any ideas please add your own.&lt;/p&gt;
&lt;h2 id="code"&gt;Code&lt;/h2&gt;
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/AlexHedley/statiq.plugins/main/src/Statiq.Plugins/icon.png" alt="Statiq.Plugins Icon" title="Statiq.Plugins Icon"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.nuget.org/packages/Statiq.Plugins/"&gt;&lt;img src="https://img.shields.io/nuget/v/Statiq.Plugins.svg?logo=nuget" alt="NuGet Version"&gt;&lt;/a&gt;
&lt;a href="https://www.nuget.org/packages/Statiq.Plugins/"&gt;&lt;img src="https://img.shields.io/nuget/dt/Statiq.Plugins?logo=nuget/" alt="NuGet Downloads"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dotnet add package Statiq.Plugins --version #.#.#&lt;/code&gt;&lt;/p&gt;
&lt;!--?# Info ?--&gt;
&lt;p&gt;Update the &lt;code&gt;version&lt;/code&gt; number (&lt;code&gt;#.#.#&lt;/code&gt;) to the latest release.&lt;/p&gt;
&lt;!--?#/ Info ?--&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alexhedley/statiq.plugins"&gt;https://github.com/alexhedley/statiq.plugins&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AlexHedley/statiq.plugins/pkgs/nuget/Statiq.Plugins"&gt;https://github.com/AlexHedley/statiq.plugins/pkgs/nuget/Statiq.Plugins&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nuget.org/packages/Statiq.Plugins/"&gt;https://www.nuget.org/packages/Statiq.Plugins/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
		<summary>Reading Time</summary>
	</entry>
	<entry>
		<id>https://alexhedley.github.io/blog/posts/streamdeck-plugins</id>
		<title>StreamDeck Plugins</title>
		<author>
			<name>AlexHedley</name>
		</author>
		<link href="https://alexhedley.github.io/blog/posts/streamdeck-plugins" />
		<link rel="enclosure" type="image" href="https://alexhedley.github.io/blog/images/banner.png" />
		<updated>2024-12-27T00:00:00Z</updated>
		<content>&lt;!-- StreamDeck Plugins --&gt;
&lt;p&gt;Whilst recording my tutorials I've needed to change the screen resolution for better uploading to YouTube. I was recording at 1080 but needed it at 720.&lt;/p&gt;
&lt;p&gt;I went looking for a way to change this but it was a little convoluted. I stubbled across a PowerShell module called &lt;code&gt;DisplaySettings&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.powershellgallery.com/packages/DisplaySettings/0.0.2"&gt;https://www.powershellgallery.com/packages/DisplaySettings/0.0.2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lust4life/display-resolution"&gt;https://github.com/lust4life/display-resolution&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It had a simple &lt;code&gt;cmdlet&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-powershell"&gt;Set-DisplayResolution -Width 1920 -Height 1080
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-powershell"&gt;Set-DisplayResolution -Width 1280 -Height 720
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next was how do I call this from my Stream Deck? I could use the &lt;a href="https://alexhedley.github.io/blog/streamdecktoolkit"&gt;StreamDeck Toolkit&lt;/a&gt; but it's likely someone already has a solution.&lt;/p&gt;
&lt;p&gt;I found a plugin from @StartAutomating but it was using PS v5. I raised an Issue &lt;a href="https://github.com/StartAutomating/ScriptDeck/issues/120#issuecomment-2563555784"&gt;#120&lt;/a&gt; asking if it were possible to swap to v7. I hadn't seen there were two versions of the plugin.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Website: &lt;a href="https://scriptdeck.start-automating.com/"&gt;https://scriptdeck.start-automating.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Code: &lt;a href="https://github.com/StartAutomating/"&gt;https://github.com/StartAutomating/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="plugins"&gt;Plugins&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Windows ScriptDeck&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://marketplace.elgato.com/product/windows-scriptdeck-857f01dd-8fd4-44d5-8ec7-67ac850b21d3"&gt;https://marketplace.elgato.com/product/windows-scriptdeck-857f01dd-8fd4-44d5-8ec7-67ac850b21d3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;ScriptDeck&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://marketplace.elgato.com/product/scriptdeck-927e59aa-b42d-4da7-84cc-8c78f4dd7e18"&gt;https://marketplace.elgato.com/product/scriptdeck-927e59aa-b42d-4da7-84cc-8c78f4dd7e18&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
		<summary>Calling PowerShell cmdlets</summary>
	</entry>
	<entry>
		<id>https://alexhedley.github.io/blog/posts/blazored-texteditor</id>
		<title>Blazored - Text Editor</title>
		<author>
			<name>alexhedley</name>
		</author>
		<link href="https://alexhedley.github.io/blog/posts/blazored-texteditor" />
		<link rel="enclosure" type="image" href="https://alexhedley.github.io/blog/posts/images/blazor/blazored/HTMLExample.png" />
		<updated>2024-12-27T00:00:00Z</updated>
		<content>&lt;!-- Blazored - Text Editor --&gt;
&lt;p&gt;Today I added &lt;em&gt;Syntax Highlighting&lt;/em&gt; to &lt;strong&gt;Blazored TextEditor&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/blazor/blazored/SyntaxHighlighterExample.png" alt="Syntax Highlighter Example" title="Syntax Highlighter Example"&gt;&lt;/p&gt;
&lt;p&gt;I'd been trying out some of the &lt;strong&gt;Blazored&lt;/strong&gt; components in a recent app and needed a WYSIWYG editor, luckily they had one using &lt;a href="https://quilljs.com/"&gt;QuillJS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When looking at the docs, I'd seen there was an option to add a code block (&lt;kbd&gt;&amp;lt;/&amp;gt;&lt;/kbd&gt;) to the editor. But this didn't provide any Syntax Highlighting via the current Blazor config.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;span class="ql-formats"&amp;gt;
    &amp;lt;button class="ql-code-block"&amp;gt;&amp;lt;/button&amp;gt;
&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I raised an issue asking the question &lt;a href="https://github.com/Blazored/TextEditor/issues/79"&gt;#79&lt;/a&gt;. The chief maintainer replied very quickly so I made a start.&lt;/p&gt;
&lt;p&gt;In their API for &lt;a href="https://quilljs.com/docs/modules/syntax"&gt;syntax&lt;/a&gt; it looked to be a simple addition to the &lt;code&gt;modules&lt;/code&gt; object.&lt;/p&gt;
&lt;p&gt;I took a look at how it was being implemented in C# and started working on a new branch. Not long after I had made a PR and it was approved and merged.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Blazored/TextEditor/pull/80"&gt;https://github.com/Blazored/TextEditor/pull/80&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Just waiting for a NuGet key to be updated and there should be a new version available soon.&lt;/p&gt;
&lt;p&gt;See my docs on how to implement it for your sites:&lt;/p&gt;
&lt;!--?# Markdown ?--&gt;
&lt;h1 id="syntax-highlighter-example"&gt;Syntax Highlighter Example&lt;/h1&gt;
&lt;p&gt;See &lt;a href="https://quilljs.com/docs/modules/syntax"&gt;Syntax Highlighter Module&lt;/a&gt; from the &lt;em&gt;QuillJS&lt;/em&gt; docs for more information.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/SyntaxHighlighterExample.png" alt="Syntax Highlighter Example" title="Syntax Highlighter Example"&gt;&lt;/p&gt;
&lt;p&gt;To turn on &lt;em&gt;Syntax Highlighting&lt;/em&gt; in your &lt;strong&gt;Blazored Text Editor&lt;/strong&gt; just pass the property &lt;code&gt;Syntax="true"&lt;/code&gt; and add the necessary library files (css/js).&lt;/p&gt;
&lt;p&gt;Then add the &lt;code&gt;ql-code-block&lt;/code&gt; to your &lt;em&gt;Toolbar&lt;/em&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;BlazoredTextEditor Syntax="true"&amp;gt;
    &amp;lt;ToolbarContent&amp;gt;
        ...
        &amp;lt;span class="ql-formats"&amp;gt;
            &amp;lt;button class="ql-code-block"&amp;gt;&amp;lt;/button&amp;gt;
        &amp;lt;/span&amp;gt;
    &amp;lt;/ToolbarContent&amp;gt;
    &amp;lt;EditorContent&amp;gt;
        ...
    &amp;lt;/EditorContent&amp;gt;
&amp;lt;/BlazoredTextEditor&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="blazor-wasm"&gt;Blazor WASM&lt;/h2&gt;
&lt;p&gt;Add to the &lt;code&gt;index.html&lt;/code&gt; both CSS and JS for a syntax highlighter, for these examples I've chosen &lt;a href="https://highlightjs.org/"&gt;highlight.js&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;head&amp;gt;
    ...
    &amp;lt;!-- Include your favorite highlight.js stylesheet --&amp;gt;
    &amp;lt;link href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/atom-one-dark.min.css" rel="stylesheet"&amp;gt;
    ...
&amp;lt;/head&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Make sure to add the &lt;code&gt;js&lt;/code&gt; before your Quill js library or you will get an error.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;body&amp;gt;
    &amp;lt;!-- Include the highlight.js library --&amp;gt;
    &amp;lt;script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/highlight.min.js"&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;!-- Quill library --&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="blazor-server"&gt;Blazor Server&lt;/h2&gt;
&lt;p&gt;Repeat the above but instead of the &lt;code&gt;index.html&lt;/code&gt; you will want to add / update your &lt;code&gt;_Host.cshtml&lt;/code&gt;.&lt;/p&gt;
&lt;!--?#/ Markdown ?--&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Blazored/TextEditor/blob/main/docs/SyntaxHighlighterExample.md"&gt;https://github.com/Blazored/TextEditor/blob/main/docs/SyntaxHighlighterExample.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
		<summary>Adding Syntax Highlighting</summary>
	</entry>
	<entry>
		<id>https://alexhedley.github.io/blog/posts/christmas-gifts</id>
		<title>Christmas Gifts</title>
		<author>
			<name>AlexHedley</name>
		</author>
		<link href="https://alexhedley.github.io/blog/posts/christmas-gifts" />
		<link rel="enclosure" type="image" href="https://alexhedley.github.io/blog/images/banner.png" />
		<updated>2024-12-24T00:00:00Z</updated>
		<content>&lt;h1 id="christmas-gifts"&gt;Christmas Gifts&lt;/h1&gt;
&lt;h2 id="supplies"&gt;Supplies&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Champagne Cork&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wine Cork&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Hairclip&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Red Beads&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Matchsticks&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Brown paint&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Red/White pipe cleaners&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mini terracotta pot&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Pine cone&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mini pompoms (various colours)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mdf star (various sizes)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Green paint&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Gold paint&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PVA glue&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wire cutters&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="steps"&gt;Steps&lt;/h2&gt;
&lt;h3 id="reindeer"&gt;🦌 Reindeer&lt;/h3&gt;
&lt;p&gt;Cut some hairclips in half, use the wiggly pieces as legs. Cut the other ends off as the eyes and a smaller piece for the neck.&lt;/p&gt;
&lt;p&gt;Add eyes to Champagne cork and antlers from the match sticks (need to re-think these).&lt;/p&gt;
&lt;p&gt;Add a bright red nose&lt;/p&gt;
&lt;p&gt;Cut a pipe cleaner down to size and add around the neck as a scarf.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/crafting/gifts/reindeer-2.jpg" alt="Reindeer" title="Reindeer"&gt;&lt;/p&gt;
&lt;h3 id="tree"&gt;🎄 Tree&lt;/h3&gt;
&lt;p&gt;Paint the tips of the pine code green&lt;/p&gt;
&lt;p&gt;Stuff different colour pom poms around the cone.&lt;/p&gt;
&lt;p&gt;Paint 2 different sized mdf wooden stars gold / bronze and stick together, then glue near the top.&lt;/p&gt;
&lt;p&gt;Glue the pine cone to the terracotta pot. (You could use a cork instead)&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/crafting/gifts/tree-1.jpg" alt="Tree" title="Tree"&gt;&lt;/p&gt;
&lt;h2 id="outcome"&gt;Outcome&lt;/h2&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/crafting/gifts/reindeer-1.jpg" alt="Reindeer" title="Reindeer"&gt;
&lt;img src="https://alexhedley.github.io/blog/images/crafting/gifts/reindeer-2.jpg" alt="Reindeer" title="Reindeer"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/crafting/gifts/tree-1.jpg" alt="Tree" title="Tree"&gt;&lt;/p&gt;
&lt;!-- ### Stages --&gt;
&lt;!-- ![Stage 1](images/stage1.jpeg "Stage 1") --&gt;
&lt;h2 id="approx-cost"&gt;Approx Cost&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;?&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- ## Inspired --&gt;
</content>
		<summary>Reindeer and Tree</summary>
	</entry>
	<entry>
		<id>https://alexhedley.github.io/blog/posts/saxophone-books-3</id>
		<title>🎷 Saxophone - Books 3</title>
		<author>
			<name>alexhedley</name>
		</author>
		<link href="https://alexhedley.github.io/blog/posts/saxophone-books-3" />
		<link rel="enclosure" type="image" href="https://alexhedley.github.io/blog/images/banner.png" />
		<updated>2024-12-24T00:00:00Z</updated>
		<content>&lt;!-- 🎷 Saxophone - Books 3 --&gt;
&lt;p&gt;My uncle introduce my twin and I to Dave Koz many years ago, he's always been a favourite of mine. Not sure how difficult they'll be but be fun to give them a go.&lt;/p&gt;
&lt;p&gt;Dave Koz: Saxophone Play-Along Volume 6 (Hal Leonard Saxophone Play-Along, 6) Paperback – 1 Oct. 2015&lt;br&gt;
&lt;a href="https://www.amazon.co.uk/dp/1480337994"&gt;https://www.amazon.co.uk/dp/1480337994&lt;/a&gt;&lt;br&gt;
£14.59&lt;br&gt;
RRP: £18.99 -23%&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/saxophone/DaveKoz.jpg" alt="Dave Koz" title="Dave Koz"&gt;&lt;/p&gt;
&lt;p&gt;Best of Dave Koz Paperback – 11 Jan. 2006&lt;br&gt;
&lt;a href="https://www.amazon.co.uk/dp/1575608464"&gt;https://www.amazon.co.uk/dp/1575608464&lt;/a&gt;&lt;br&gt;
£16.79&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/saxophone/DaveKoz_BestOf.jpg" alt="Best of Dave Koz" title="Best of Dave Koz"&gt;&lt;/p&gt;
&lt;p&gt;Found &lt;strong&gt;Gladiator&lt;/strong&gt; in a book so bought it just for that song. There are others I might try.&lt;/p&gt;
&lt;p&gt;New film Themes Play along For alto Saxophone With CD&lt;br&gt;
£10.10 (from eBay)&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/saxophone/NewFilmThemes.jpg" alt="Film Themes" title="Film Themes"&gt;&lt;/p&gt;
</content>
		<summary>Buying more music.</summary>
	</entry>
	<entry>
		<id>https://alexhedley.github.io/blog/posts/blazor-fluentui-markdownsection</id>
		<title>Blazor - FluentUI - Markdown</title>
		<author>
			<name>alexhedley</name>
		</author>
		<link href="https://alexhedley.github.io/blog/posts/blazor-fluentui-markdownsection" />
		<link rel="enclosure" type="image" href="https://alexhedley.github.io/blog/posts/images/blazor/fluentui-blazor.jpg" />
		<updated>2024-12-23T00:00:00Z</updated>
		<content>&lt;!-- # Blazor - FluentUI - Markdown --&gt;
&lt;p&gt;Want to display &lt;a href="https://daringfireball.net/projects/markdown/syntax"&gt;markdown&lt;/a&gt; in your Blazor app? Of course you do.&lt;/p&gt;
&lt;p&gt;The FluentUI Blazor components have you covered in their 🧪 lab section.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.fluentui-blazor.net/Lab/MarkdownSection"&gt;https://www.fluentui-blazor.net/Lab/MarkdownSection&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There's a little bit of work to bring in the component as it's not shipped in the library itself as it contains a dependency of &lt;a href="https://github.com/xoofx/markdig"&gt;markdig&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please see my previous post &lt;a href="https://alexhedley.github.io/blog/blazor-fluentui-codesnippet"&gt;Blazor - FluentUI - Code Snippet&lt;/a&gt; for the setup of &lt;em&gt;Highlight.js&lt;/em&gt; as this is used by the following component.&lt;/p&gt;
&lt;p&gt;Create a new folder in your Shared project.&lt;/p&gt;
&lt;p&gt;📁 &lt;code&gt;\Infrastructure&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/fluentui-blazor/"&gt;https://github.com/microsoft/fluentui-blazor/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Copy the following files from &lt;a href="https://github.com/microsoft/fluentui-blazor/tree/dev/examples/Demo/Shared/Infrastructure"&gt;examples/Demo/Shared/Infrastructure&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AppVersionService.cs&lt;/li&gt;
&lt;li&gt;CacheStorageAccessor.cs&lt;/li&gt;
&lt;li&gt;HttpBasedStaticAssetService.cs &lt;em&gt;(This is need for Blazor WASM)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;IAppVersionService.cs&lt;/li&gt;
&lt;li&gt;IStaticAssetService.cs&lt;/li&gt;
&lt;li&gt;ServerStaticAssetService.cs &lt;em&gt;(This is need for Blazor Server)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;ServiceCollectionExtensions.cs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then copy the following component files from &lt;a href="https://github.com/microsoft/fluentui-blazor/tree/dev/examples/Demo/Shared/Components"&gt;examples/Demo/Shared/Components&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MarkdownSection.razor&lt;/li&gt;
&lt;li&gt;MarkdownSection.razor.cs&lt;/li&gt;
&lt;li&gt;MarkdownSection.razor.css&lt;/li&gt;
&lt;li&gt;MarkdownSection.razor.js&lt;/li&gt;
&lt;li&gt;MarkdownSectionPreCodeExtension.cs&lt;/li&gt;
&lt;li&gt;MarkdownSectionPreCodeRenderer.cs&lt;/li&gt;
&lt;li&gt;MarkdownSectionPreCodeRendererOptions.cs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Something from &lt;a href="https://github.com/microsoft/fluentui-blazor/blob/dev/examples/Demo/Shared/wwwroot/js/"&gt;wwwroot/js/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CacheStorageAccessor.js&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Next you want to update a few places.&lt;/p&gt;
&lt;p&gt;In &lt;code&gt;CacheStorageAccessor.cs&lt;/code&gt; swap the path to your project.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-cs"&gt;public class CacheStorageAccessor(IJSRuntime js, IAppVersionService vs) : JSModule(js, "./_content/FluentUI.Demo.Shared/js/CacheStorageAccessor.js")
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-cs"&gt;JSModule(js, "./_content/[PROJECT_NAME]/js/CacheStorageAccessor.js")
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In &lt;code&gt;ServiceCollectionExtensions.cs&lt;/code&gt; remove the &lt;code&gt;DemoNavProvider&lt;/code&gt; unless you are using it. I also renamed to &lt;code&gt;AddFluentUIDemoClientServices()&lt;/code&gt; to &lt;code&gt;AddFluentUIClientServices()&lt;/code&gt;. Amend accordingly.&lt;/p&gt;
&lt;p&gt;In &lt;code&gt;MarkdownSection.razor.cs&lt;/code&gt; swap the path again:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-cs"&gt;        _jsModule = await JSRuntime.InvokeAsync&amp;lt;IJSObjectReference&amp;gt;("import",
            "./_content/FluentUI.Demo.Shared/Components/MarkdownSection.razor.js");
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-cs"&gt;        _jsModule = await JSRuntime.InvokeAsync&amp;lt;IJSObjectReference&amp;gt;("import",
            "./_content/[PROJECT_NAME]/MarkdownSection.razor.js");
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Update the &lt;code&gt;namespaces&lt;/code&gt; from &lt;code&gt;namespace FluentUI.Demo.Shared.*&lt;/code&gt; to yours.&lt;/p&gt;
&lt;p&gt;In &lt;code&gt;Program.cs&lt;/code&gt; of your main app add the helper function &lt;code&gt;AddFluentUIClientServices()&lt;/code&gt; from &lt;code&gt;ServiceCollectionExtensions.cs&lt;/code&gt; so everything is setup.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-cs"&gt;            builder.Services.AddFluentUIClientServices();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally you want to add the &lt;em&gt;component&lt;/em&gt; to your app.&lt;/p&gt;
&lt;p&gt;You can either use &lt;code&gt;Content&lt;/code&gt; and add you markdown directly:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-razor"&gt;&amp;lt;MarkdownSection Content="text in *italics* and **bold**"&amp;gt;&amp;lt;/MarkdownSection&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or you can use the &lt;code&gt;StaticAssetService&lt;/code&gt; to pull in some files.&lt;/p&gt;
&lt;p&gt;Firstly create a new folder 📁 called &lt;code&gt;docs&lt;/code&gt; in your &lt;code&gt;wwwroot&lt;/code&gt; of your Shared project. Then add the path in the &lt;code&gt;FromAsset&lt;/code&gt; property.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-razor"&gt;&amp;lt;MarkdownSection FromAsset="./_content/[PROJECT_NAME]/docs/CodeSetup.md"&amp;gt;&amp;lt;/MarkdownSection&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What's cool about this is that you can pass it any MD file so taking one directly from GitHub with the RAW url and it'll also work.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-razor"&gt;&amp;lt;MarkdownSection FromAsset="https://raw.githubusercontent.com/microsoft/fluentui-blazor/refs/heads/dev/examples/Demo/Shared/wwwroot/docs/DesignTokens.md"&amp;gt;&amp;lt;/MarkdownSection&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;One thing I need to check is how it handles images, but that's for another day.&lt;/p&gt;
&lt;h2 id="example"&gt;Example&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;text in *italics* and **bold**&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;text in &lt;em&gt;italics&lt;/em&gt; and &lt;strong&gt;bold&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/blazor/markdownsection.png" alt="Markdown Section" title="Markdown Section"&gt;&lt;/p&gt;
&lt;h2 id="links"&gt;🔗 Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/xoofx/markdig"&gt;https://github.com/xoofx/markdig&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dotnet.microsoft.com/en-us/apps/aspnet/web-apps/blazor"&gt;https://dotnet.microsoft.com/en-us/apps/aspnet/web-apps/blazor&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://learn.microsoft.com/en-us/aspnet/core/blazor/?view=aspnetcore-9.0"&gt;https://learn.microsoft.com/en-us/aspnet/core/blazor/?view=aspnetcore-9.0&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/dotnet/aspnetcore"&gt;https://github.com/dotnet/aspnetcore&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/blazor"&gt;https://github.com/dotnet/blazor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/microsoft/fluentui-blazor"&gt;https://github.com/microsoft/fluentui-blazor&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://learn.microsoft.com/en-us/fluent-ui/web-components/integrations/blazor"&gt;https://learn.microsoft.com/en-us/fluent-ui/web-components/integrations/blazor&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://learn.microsoft.com/en-us/shows/open-at-microsoft/exploring-the-fluent-ui-blazor-components"&gt;https://learn.microsoft.com/en-us/shows/open-at-microsoft/exploring-the-fluent-ui-blazor-components&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.fluentui-blazor.net/"&gt;https://www.fluentui-blazor.net/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.nuget.org/profiles/fluentui-blazor"&gt;https://www.nuget.org/profiles/fluentui-blazor&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
		<summary>Using markdown in your pages</summary>
	</entry>
	<entry>
		<id>https://alexhedley.github.io/blog/posts/blazor-fluentui-codesnippet</id>
		<title>Blazor - FluentUI - Code Snippet</title>
		<author>
			<name>alexhedley</name>
		</author>
		<link href="https://alexhedley.github.io/blog/posts/blazor-fluentui-codesnippet" />
		<link rel="enclosure" type="image" href="https://alexhedley.github.io/blog/posts/images/blazor/fluentui-blazor.jpg" />
		<updated>2024-12-23T00:00:00Z</updated>
		<content>&lt;!-- # Blazor - FluentUI - Code Snippet --&gt;
&lt;p&gt;I've been working with &lt;a href="https://dotnet.microsoft.com/en-us/apps/aspnet/web-apps/blazor"&gt;Blazor&lt;/a&gt; for a number of years, you can see &lt;a href="https://alexhedley.github.io/blog/utility-blazor"&gt;Utility Blazor&lt;/a&gt; and &lt;a href="https://alexhedley.github.io/blog/dotnet-blazor-interactive"&gt;.NET Blazor Interactive&lt;/a&gt; etc for examples.&lt;/p&gt;
&lt;p&gt;When the &lt;a href="https://www.fluentui-blazor.net/"&gt;FluentUI Blazor&lt;/a&gt; was released I started upgrading a few of the sites to use the new theme/components but hadn't spent much time as the originally functionality was working so wanted to spend my time adding new features, not refactoring existing.&lt;/p&gt;
&lt;p&gt;Recently I've started a brand new &lt;a href="https://alexhedley.com/projects/"&gt;project&lt;/a&gt; and thought I'd make it from scratch. One piece of functionality I wanted was displaying code snippets with syntax hightlighting functionality. Previously I've used &lt;a href="https://github.com/syntaxhighlighter/syntaxhighlighter"&gt;SyntaxHighlighter&lt;/a&gt; from &lt;a href="https://github.com/alexgorbatchev"&gt;@Alex Gorbatchev&lt;/a&gt; but there are many others, one being &lt;a href="https://highlightjs.org/"&gt;Highlight.js&lt;/a&gt; (&lt;a href="https://github.com/highlightjs/highlight.js"&gt;GitHub Code&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;A &lt;a href="https://github.com/microsoft/fluentui-blazor/discussions"&gt;Discussion&lt;/a&gt; was raised on their &lt;a href="https://github.com/microsoft/fluentui-blazor/"&gt;GitHub repo&lt;/a&gt; page:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Does this library has any component to display code snippet? #3043
&lt;a href="https://github.com/microsoft/fluentui-blazor/discussions/3043"&gt;https://github.com/microsoft/fluentui-blazor/discussions/3043&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Firstly you need to copy a number of the files to your project.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/fluentui-blazor/blob/dev/examples/Demo/Shared/Components/CodeSnippet.razor"&gt;CodeSnippet.razor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/fluentui-blazor/blob/dev/examples/Demo/Shared/Components/CodeSnippet.razor.cs"&gt;CodeSnippet.razor.cs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/fluentui-blazor/blob/dev/examples/Demo/Shared/Components/CodeSnippet.razor.css"&gt;CodeSnippet.razor.css&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/fluentui-blazor/blob/dev/examples/Demo/Shared/Components/CodeSnippet.razor.js"&gt;CodeSnippet.razor.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I have another project for &lt;em&gt;Components&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;You also need some custom js for the app, this needs to go into your 📂 &lt;code&gt;wwwroot/js/&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://alexhedley.github.io/blog/examples/Demo/Shared/wwwroot/js/highlight-extensions.js"&gt;highlight-extensions.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In your &lt;code&gt;index.html&lt;/code&gt; add a reference to the &lt;code&gt;js&lt;/code&gt;. Makes sure to update the &lt;code&gt;[PROJECT_NAME]&lt;/code&gt; to the relevant value you have.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-html"&gt;    &amp;lt;!-- highlight --&amp;gt;
    &amp;lt;script type="text/javascript" src="_content/[PROJECT_NAME]/js/highlight-extensions.js"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For example they have the following in &lt;a href="https://github.com/microsoft/fluentui-blazor/blob/main/examples/Demo/Server/Pages/_Layout.cshtml#L39"&gt;_Layout.cshtml #L39&lt;/a&gt; or
&lt;a href="https://github.com/microsoft/fluentui-blazor/blob/main/examples/Demo/Client/wwwroot/index.html#L59"&gt;index.html #L59&lt;/a&gt; depending on whether it's a &lt;em&gt;Server&lt;/em&gt; or &lt;em&gt;Client&lt;/em&gt; app.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-html"&gt;    &amp;lt;!-- highlight --&amp;gt;
    &amp;lt;script type="text/javascript" src="_content/FluentUI.Demo.Shared/js/highlight-extensions.js"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The next thing to update is the reference to the &lt;code&gt;.js&lt;/code&gt; file in the &lt;code&gt;.cs&lt;/code&gt; code file. Find your &lt;a href="https://github.com/microsoft/fluentui-blazor/blob/main/examples/Demo/Shared/Components/CodeSnippet.razor.cs#L35"&gt;CodeSnippet.razor.cs #L35&lt;/a&gt;. Update &lt;code&gt;FluentUI.Demo.Shared/Components/&lt;/code&gt; to the path where you have stored yours.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-cs"&gt;            _jsModule = await JSRuntime.InvokeAsync&amp;lt;IJSObjectReference&amp;gt;("import",
                "./_content/FluentUI.Demo.Shared/Components/CodeSnippet.razor.js");
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next you just need to use the component!&lt;/p&gt;
&lt;p&gt;Add the &lt;code&gt;CodeSnippet&lt;/code&gt; tag with the &lt;code&gt;Language&lt;/code&gt; you need. You can find a list of &lt;a href="https://highlightjs.readthedocs.io/en/latest/supported-languages.html"&gt;Supported Languages&lt;/a&gt; on their &lt;a href="https://highlightjs.readthedocs.io/en/latest/"&gt;docs&lt;/a&gt; site.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;CodeSnippet Language="razor"&amp;gt;
@(@"
...
")
&amp;lt;/CodeSnippet&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;CodeSnippet Language="razor"&amp;gt;
    @(
@"&amp;lt;main&amp;gt;
    &amp;lt;nav&amp;gt;
        &amp;lt;!-- --&amp;gt;
    &amp;lt;/nav&amp;gt;
    &amp;lt;div class=""content""&amp;gt;
        &amp;lt;article id=""article""&amp;gt;
            @Body
        &amp;lt;/article&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;FluentDialogProvider /&amp;gt;
&amp;lt;/main&amp;gt;"
    )
&amp;lt;/CodeSnippet&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then you will have some beautiful code with a &lt;strong&gt;copy&lt;/strong&gt; button too.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/blazor/highlight-example.png" alt="Highlight Example" title="Highlight Example"&gt;&lt;/p&gt;
&lt;p&gt;You can even use their &lt;code&gt;StaticAssetsService&lt;/code&gt; to pull in &lt;code&gt;.txt&lt;/code&gt; file versions of the code.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;em&gt;@vnbaaij&lt;/em&gt;, &lt;em&gt;@dvoituron&lt;/em&gt; and others for help with my noob questions.&lt;/p&gt;
&lt;h2 id="links"&gt;🔗 Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dotnet.microsoft.com/en-us/apps/aspnet/web-apps/blazor"&gt;https://dotnet.microsoft.com/en-us/apps/aspnet/web-apps/blazor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learn.microsoft.com/en-us/aspnet/core/blazor/?view=aspnetcore-9.0"&gt;https://learn.microsoft.com/en-us/aspnet/core/blazor/?view=aspnetcore-9.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/aspnetcore"&gt;https://github.com/dotnet/aspnetcore&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/blazor"&gt;https://github.com/dotnet/blazor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/fluentui-blazor"&gt;https://github.com/microsoft/fluentui-blazor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learn.microsoft.com/en-us/fluent-ui/web-components/integrations/blazor"&gt;https://learn.microsoft.com/en-us/fluent-ui/web-components/integrations/blazor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learn.microsoft.com/en-us/shows/open-at-microsoft/exploring-the-fluent-ui-blazor-components"&gt;https://learn.microsoft.com/en-us/shows/open-at-microsoft/exploring-the-fluent-ui-blazor-components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fluentui-blazor.net/"&gt;https://www.fluentui-blazor.net/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nuget.org/profiles/fluentui-blazor"&gt;https://www.nuget.org/profiles/fluentui-blazor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/fluentui-blazor/discussions/3043"&gt;https://github.com/microsoft/fluentui-blazor/discussions/3043&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
		<summary>Using a code snippet / syntax highlighter</summary>
	</entry>
	<entry>
		<id>https://alexhedley.github.io/blog/posts/statiq-stats</id>
		<title>Statiq - Stats</title>
		<author>
			<name>alexhedley</name>
		</author>
		<link href="https://alexhedley.github.io/blog/posts/statiq-stats" />
		<link rel="enclosure" type="image" href="https://alexhedley.github.io/blog/posts/images/statiq-web.svg" />
		<updated>2024-12-20T00:00:00Z</updated>
		<content>&lt;!-- # Statiq - Stats --&gt;
&lt;p&gt;Previously I'd added a count of posts &lt;a href="https://github.com/AlexHedley/blog/commit/ce65090ba756000610f09653603efc6e3e5e7da6"&gt;commit&lt;/a&gt; to the &lt;a href="https://alexhedley.com/blog/posts/"&gt;Posts&lt;/a&gt; page. Adding some styling to the &lt;code&gt;src/input/scss/_overrides.scss&lt;/code&gt; to position it on the right hand side and make it a little smaller, I think it looks quite nice.&lt;/p&gt;
&lt;p&gt;Who doesn't want a Total count too?! I made a new &lt;strong&gt;Stats&lt;/strong&gt; page just to show the combined total and total for each year.&lt;/p&gt;
&lt;p&gt;I might add a graph at some point.&lt;/p&gt;
&lt;p&gt;335 posts isn't bad!&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/blog/stats.png" alt="Stats" title="Stats"&gt;&lt;/p&gt;
&lt;h2 id="code"&gt;Code&lt;/h2&gt;
&lt;p&gt;Create a new page &lt;code&gt;src\input\stats.cshtml&lt;/code&gt;. Update the &lt;code&gt;Order&lt;/code&gt; you want.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Title: Stats
IsPage: true
ShowInNavbar: true
Order: 400
---

&amp;lt;h1 class="bg-dark text-light p-2"&amp;gt;Total &amp;lt;span class="postCount"&amp;gt;@(Outputs.FromPipeline(nameof(Content))
                                                                        .Flatten()
                                                                        .FilterSources($"posts/*")
                                                                        .Count())&amp;lt;/span&amp;gt;&amp;lt;/h1&amp;gt;

&amp;lt;hr /&amp;gt;

@* Years Count *@
@foreach(IGrouping&amp;lt;int, IDocument&amp;gt; group in Outputs
                                            .FromPipeline(nameof(Content))
                                            .Flatten()
                                            .FilterSources($"posts/*")
                                            .GroupBy(x =&amp;gt; x.GetDateTime(WebKeys.Published).Year)
                                            .OrderByDescending(x =&amp;gt; x.Key))
{
    &amp;lt;h1 class="bg-dark text-light p-2"&amp;gt;@group.Key &amp;lt;span class="postCount"&amp;gt;@group.Count()&amp;lt;/span&amp;gt;&amp;lt;/h1&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I originally got the syntax wrong, I put a bracket in the wrong place and couldn't see the wood for the trees. Thankfully I got some help from &lt;em&gt;@girlpunk&lt;/em&gt; on Statiq's GitHub Discussions: &lt;a href="https://github.com/orgs/statiqdev/discussions/230"&gt;D#230&lt;/a&gt;.&lt;/p&gt;
</content>
		<summary>How to total post counts</summary>
	</entry>
</feed>