<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<id>https://alexhedley.github.io/blog</id>
	<title>Alex Hedley</title>
	<link rel="self" href="https://alexhedley.github.io/blog" />
	<rights>Copyright © 2023</rights>
	<updated>2023-07-09T17:19:02Z</updated>
	<logo>https://alexhedley.github.io/blog/images/banner.png</logo>
	<subtitle>Welcome to my blog!</subtitle>
	<entry>
		<id>https://alexhedley.github.io/blog/posts/talk-beginners-guide-to-api-specs-part2</id>
		<title>🎙️ Beginners Guide to API Specs - Part 2</title>
		<author>
			<name>alex-hedley</name>
		</author>
		<link href="https://alexhedley.github.io/blog/posts/talk-beginners-guide-to-api-specs-part2" />
		<link rel="enclosure" type="image" href="https://alexhedley.github.io/blog/images/banner.png" />
		<updated>2023-07-06T00:00:00Z</updated>
		<content>&lt;!-- Beginners Guide to API Specs - Part 2 --&gt;
&lt;p&gt;In &lt;a href="https://alexhedley.github.io/blog/talk-beginners-guide-to-api-specs"&gt;Part 1&lt;/a&gt; I ran through what an API Specification is, showed the underlying JSON (or YAML) and how it looked as a Swagger website.
In this presentation I showed you how to interrogate and visualise your data with a tool called &lt;a href="https://www.postman.com/"&gt;Postman&lt;/a&gt;, how to annotate your code  with a Kotlin example (&lt;a href="https://github.com/alex-hedley/demo-lego-api"&gt;LEGO API Demo&lt;/a&gt;) and discussed the Editor and Generator for helping with the API.&lt;/p&gt;
&lt;p&gt;🗓️ July 06, 2023&lt;/p&gt;
&lt;!-- 📼  --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://alex-hedley.github.io/talk-beginners-guide-to-api-specs/#/part-2"&gt;Presentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alex-hedley/talk-beginners-guide-to-api-specs"&gt;Presentation Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://alex-hedley.github.io/talks/"&gt;Talks Site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alex-hedley/talks"&gt;Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
		<summary>How to to test an API.</summary>
	</entry>
	<entry>
		<id>https://alexhedley.github.io/blog/posts/aws-cloud-quest-machine-learning</id>
		<title>AWS Cloud Quest Machine Learning</title>
		<author>
			<name>alex-hedley</name>
		</author>
		<link href="https://alexhedley.github.io/blog/posts/aws-cloud-quest-machine-learning" />
		<link rel="enclosure" type="image" href="https://alexhedley.github.io/blog/posts/images/aws-cq/cloud-quest.png" />
		<updated>2023-07-05T00:00:00Z</updated>
		<content>&lt;!-- # AWS Cloud Quest Machine Learning --&gt;
&lt;p&gt;Today I completed the &lt;strong&gt;AWS Cloud Quest Machine Learnings&lt;/strong&gt; training 🎉!&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/aws-cq/aws-cloud-quest-machine-learning.jpeg" alt="AWS Cloud Quest Data Analytics Badge" title="AWS Cloud Quest Machine Learning Badge"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.credly.com/badges/0b283f21-b9cd-408e-9b54-f01cab2d3aa1/public_url"&gt;Credly Badge&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.credly.com/users/alexhedley/badges"&gt;Credly Profile&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is a paid course from AWS that uses gamification and hands on labs to reinforce learnings.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Part of AWS Skill Builder Individual subscription. Subscribe to get access to this and other subscriber-only benefits.&lt;br&gt;
$29.00 / month + VAT&lt;br&gt;
&lt;a href="https://explore.skillbuilder.aws/learn/signin"&gt;https://explore.skillbuilder.aws/learn/signin&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;As the Machine Learning specialist, you will implement solutions using AWS AI services and trained models. You will build, train, and deploy Machine Learning models, as well as integrate AWS AI services into solutions. You will gain hands on experience with AI/ML topics like reinforcement learning, anomaly detection, text to speech, transcription and computer vision.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="training-material"&gt;Training Material&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/training/learn-about/cloud-practitioner/"&gt;Training Material&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="links"&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/training/digital/aws-cloud-quest/"&gt;AWS Cloud Quest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://explore.skillbuilder.aws/learn/course/external/view/elearning/7636/cloud-quest"&gt;Cloud Quest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- ## Resources Used --&gt;
</content>
	</entry>
	<entry>
		<id>https://alexhedley.github.io/blog/posts/statiq-web-shortcodes-include</id>
		<title>Statiq.Web - Shortcodes - Include</title>
		<author>
			<name>alexhedley</name>
		</author>
		<link href="https://alexhedley.github.io/blog/posts/statiq-web-shortcodes-include" />
		<link rel="enclosure" type="image" href="https://alexhedley.github.io/blog/posts/images/statiq-web.svg" />
		<updated>2023-07-02T00:00:00Z</updated>
		<content>&lt;?# Raw ?&gt;
&lt;p&gt;In another project (&lt;a href="https://alexhedley.com/symantec-connect-articles/"&gt;Symantec Connect Articles&lt;/a&gt;) I've got a Table of Contents (toc) for many sets of Articles. This can sometimes be a lot of information and is duplicated in each article, at the top and bottom. This isn't ideal if I need to update anything.&lt;/p&gt;
&lt;p&gt;Seeing an &lt;code&gt;Include&lt;/code&gt; option in &lt;a href="https://www.devlead.se/posts/2021/2021-04-09-devlead-statiq-part1-tabs"&gt;Devlead.Statiq - Part 1 - Tabs&lt;/a&gt; I wondered if there was similar functionality already built in.&lt;/p&gt;
&lt;p&gt;When I originally tried it, looking at other &lt;code&gt;Shortcodes&lt;/code&gt;, it didn't work. It was showing it as plain text and not converting to markdown.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;?# Include &amp;quot;./../includes/posts/toc.md&amp;quot; /?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This can't be the only option? To the docs. &lt;a href="https://www.statiq.dev/guide/content-and-data/shortcodes#processing-phases"&gt;Processing Phases&lt;/a&gt; explained what was going on.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pre-rendering: &lt;code&gt;&amp;lt;?! ShortcodeName /?&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Intermediate: &lt;code&gt;&amp;lt;?^ ShortcodeName /?&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Post-rendering: &lt;code&gt;&amp;lt;?# ShortcodeName /?&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I'd been using Post-rendering &lt;code&gt;&amp;lt;?#&lt;/code&gt; since this is what was used on a code example. Swapping it to &lt;em&gt;Intermediate&lt;/em&gt; worked a treat.&lt;/p&gt;
&lt;p&gt;Looking for other examples I also found the &lt;strong&gt;Markdown&lt;/strong&gt; &lt;code&gt;Shortcode&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;?# Markdown ?&amp;gt;
&amp;lt;?!^ &amp;quot;./../includes/posts/toc.md&amp;quot; /?&amp;gt;
&amp;lt;?#/ Markdown ?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I prefer this as the intention is very clear.&lt;/p&gt;
&lt;p&gt;Now all I need to do is update all my articles to use this...&lt;/p&gt;
&lt;h2 id="links"&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.statiq.dev/guide/content-and-data/shortcodes"&gt;Shortcodes&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.statiq.dev/guide/content-and-data/shortcodes#processing-phases"&gt;Processing Phases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wyam.io/docs/concepts/shortcodes"&gt;wyam&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2 id="options"&gt;Options&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input disabled="disabled" type="checkbox" checked="checked" /&gt; Include&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input disabled="disabled" type="checkbox" checked="checked" /&gt; Markdown&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input disabled="disabled" type="checkbox" /&gt; Raw&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input disabled="disabled" type="checkbox" /&gt; Embed&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input disabled="disabled" type="checkbox" /&gt; Giphy&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input disabled="disabled" type="checkbox" /&gt; Gist&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input disabled="disabled" type="checkbox" /&gt; Twitter&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input disabled="disabled" type="checkbox" /&gt; YouTube&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input disabled="disabled" type="checkbox" /&gt; Link&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input disabled="disabled" type="checkbox" /&gt; Figure&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input disabled="disabled" type="checkbox" /&gt; Table&lt;/li&gt;
&lt;/ul&gt;
&lt;?#/ Raw ?&gt;
</content>
		<summary>How to reuse content.</summary>
	</entry>
	<entry>
		<id>https://alexhedley.github.io/blog/posts/dotnet-blazor-interactive</id>
		<title>.NET Blazor Interactive</title>
		<author>
			<name>alexhedley</name>
		</author>
		<link href="https://alexhedley.github.io/blog/posts/dotnet-blazor-interactive" />
		<link rel="enclosure" type="image" href="https://alexhedley.github.io/blog/images/banner.png" />
		<updated>2023-06-25T00:00:00Z</updated>
		<content>&lt;p&gt;With the help of some friends we've build a &lt;a href="https://dotnet.microsoft.com/apps/aspnet/web-apps/blazor"&gt;Blazor&lt;/a&gt; WASM site that can compile &lt;a href="https://learn.microsoft.com/dotnet/csharp/"&gt;C#&lt;/a&gt; in the browser.&lt;/p&gt;
&lt;p&gt;Meet &lt;strong&gt;&lt;a href="https://alex-hedley.github.io/BlazorInteractive/"&gt;BlazorInteractive&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/alex-hedley/BlazorInteractive/main/docs/images/progress.png" alt="BlazorInteractive Progress" /&gt;&lt;/p&gt;
&lt;p&gt;Looking to add &lt;a href="https://fsharp.org/"&gt;F#&lt;/a&gt; and &lt;a href="https://learn.microsoft.com/dotnet/visual-basic/"&gt;VB.NET&lt;/a&gt; support soon.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;.NET Interactive&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Steve Sanderson&lt;br /&gt;
&amp;#64;stevensanderson&lt;br /&gt;
Just published a video: an update on WASI support in .NET 8, and some prototypes that push the boundaries of what you can do with .NET + WebAssembly&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://twitter.com/stevensanderson/status/1658845798212202496?s=20"&gt;https://twitter.com/stevensanderson/status/1658845798212202496?s=20&lt;/a&gt;&lt;/p&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Just published a video: an update on WASI support in .NET 8, and some prototypes that push the boundaries of what you can do with .NET + WebAssembly &lt;a href="https://t.co/bq9YzlYJCo"&gt;https://t.co/bq9YzlYJCo&lt;/a&gt;&lt;/p&gt;&amp;mdash; Steve Sanderson (&amp;#64;stevensanderson) &lt;a href="https://twitter.com/stevensanderson/status/1658845798212202496?ref_src=twsrc%5Etfw"&gt;May 17, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;Experiments with the new WASI workload in .NET 8 Preview 4&lt;br /&gt;
📼 &lt;a href="https://www.youtube.com/watch?v=gKX-cdqnb8I"&gt;https://www.youtube.com/watch?v=gKX-cdqnb8I&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/&amp;#64;stevensandersonuk"&gt;stevensandersonuk&lt;/a&gt;
17 May 2023&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;.NET 8 adds a new &amp;quot;wasi-experimental&amp;quot; workload, replacing the earlier Wasi.Sdk. This is a step towards giving .NET native, built-in support for server-side WebAssembly scenarios.&lt;/p&gt;
&lt;p&gt;This video shows how to get started, then demonstrates how .NET+WASI creates possibilities for new kinds of apps and new ways to use .NET.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="links"&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://try.dot.net/"&gt;Try .NET&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dotnet.microsoft.com/en-us/platform/try-dotnet"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/try"&gt;Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/net-interactive-is-here-net-notebooks-preview-2/"&gt;.NET Interactive is here! | .NET Notebooks Preview 2&lt;/a&gt; 📅 February 6th, 2020&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/interactive"&gt;Code&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/interactive/issues/800"&gt;[QUESTION]: Can .NET interactive be embedded in a Web Application?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/alex-hedley/BlazorInteractive"&gt;BlazorInteractive&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://alex-hedley.github.io/BlazorInteractive/"&gt;Site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/alex-hedley/dotnet-interactive-experiments"&gt;.NET Interactive Experiments&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/alex-hedley/dotnet-interactive-blazor-wasm"&gt;.NET Interactive Blazor (WASM)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/SteveSandersonMS/dotnet-wasi-sdk"&gt;Experimental WASI SDK for .NET Core&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
		<summary>&lt;p&gt;With the help of some friends we've build a &lt;a href="https://dotnet.microsoft.com/apps/aspnet/web-apps/blazor"&gt;Blazor&lt;/a&gt; WASM site that can compile &lt;a href="https://learn.microsoft.com/dotnet/csharp/"&gt;C#&lt;/a&gt; in the browser.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://alexhedley.github.io/blog/posts/the-beginning-of-blashing</id>
		<title>The Beginning of Blashing</title>
		<author>
			<name>alexhedley</name>
		</author>
		<link href="https://alexhedley.github.io/blog/posts/the-beginning-of-blashing" />
		<link rel="enclosure" type="image" href="https://alexhedley.github.io/blog/images/banner.png" />
		<updated>2023-06-23T00:00:00Z</updated>
		<content>&lt;p&gt;Having worked with a &lt;a href="https://github.com/Shopify/dashing"&gt;Dashing&lt;/a&gt; / &lt;a href="https://github.com/Smashing/smashing"&gt;Smashing&lt;/a&gt; meant having to setup 💎 &lt;a href="https://www.ruby-lang.org/en/"&gt;Ruby&lt;/a&gt;, as this isn't a language I'm not familiar with there was a little bit of a barrier to entry. I've used in the past with some iOS projects but only in little bursts.&lt;/p&gt;
&lt;p&gt;Having a discussion with a colleague they had a similar experience, now as we're both .NET enthusiasts the obvious choice was to port it to &lt;a href="https://dotnet.microsoft.com/"&gt;.NET&lt;/a&gt; and since &lt;a href="https://dotnet.microsoft.com/apps/aspnet/web-apps/blazor"&gt;Blazor&lt;/a&gt; is the hot stuff atm why not use that.&lt;/p&gt;
&lt;p&gt;Before we start, we need a name...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Blashing&lt;/strong&gt; &lt;img src="https://alexhedley.github.io/blog/images/blashing/bowtie_blazor_logo.png" alt="Blashing" title="Blashing"&gt;&lt;/p&gt;
&lt;p&gt;I know, clever! I don't know how I come up with such great names.&lt;/p&gt;
&lt;p&gt;Next is create a &lt;a href="https://github.com/AlexHedley/blashing"&gt;repo&lt;/a&gt; and the journey begins.&lt;/p&gt;
&lt;p&gt;I've already made a start creating the original list of &lt;a href="https://github.com/Smashing/smashing/tree/master/templates/project/widgets"&gt;widgets&lt;/a&gt;: &lt;em&gt;clock&lt;/em&gt;, &lt;em&gt;comments&lt;/em&gt;, &lt;em&gt;graph&lt;/em&gt;, &lt;em&gt;iframe&lt;/em&gt;, &lt;em&gt;image&lt;/em&gt;, &lt;em&gt;list&lt;/em&gt;, &lt;em&gt;meter&lt;/em&gt;, &lt;em&gt;number&lt;/em&gt;, &lt;em&gt;text&lt;/em&gt;. There is also a community of &lt;a href="https://github.com/Smashing/smashing/wiki/Additional-Widgets"&gt;Additional Widgets&lt;/a&gt; that could be fun to port over too.&lt;/p&gt;
&lt;p&gt;There's the grid system to think about, drag &amp;amp; drop capabilities, &lt;a href="https://fontawesome.com/"&gt;Font Awesome&lt;/a&gt; icons and much, much more.&lt;/p&gt;
&lt;p&gt;You can follow along with the progress using the GitHub &lt;a href="https://github.com/users/AlexHedley/projects/2/views/2"&gt;Project&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I'd like to use a Blazor WASM project to host a demo and documentation site showing the features.&lt;/p&gt;
&lt;h2 id="links"&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/AlexHedley/blashing"&gt;Blashing&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/users/AlexHedley/projects/2/views/2"&gt;Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Website - WIP&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://dashing.io/"&gt;Dashing Website&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Shopify/dashing"&gt;Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://smashing.github.io/"&gt;Smashing Website&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Smashing/smashing"&gt;Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
		<summary>Build a beautiful dashboard</summary>
	</entry>
	<entry>
		<id>https://alexhedley.github.io/blog/posts/aws-cloud-quest-data-analytics</id>
		<title>AWS Cloud Quest Data Analytics</title>
		<author>
			<name>alex-hedley</name>
		</author>
		<link href="https://alexhedley.github.io/blog/posts/aws-cloud-quest-data-analytics" />
		<link rel="enclosure" type="image" href="https://alexhedley.github.io/blog/posts/images/aws-cq/cloud-quest.png" />
		<updated>2023-06-21T00:00:00Z</updated>
		<content>&lt;!-- # AWS Cloud Quest Data Analytics --&gt;
&lt;p&gt;Today I completed the &lt;strong&gt;AWS Cloud Quest Data Analytics&lt;/strong&gt; training 🎉!&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/aws-cq/aws-cloud-quest-data-analytics.png" alt="AWS Cloud Quest Data Analytics Badge" title="AWS Cloud Quest Data Analytics Badge"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.credly.com/badges/ab563fd2-39db-4490-9629-5b01728a8a70/public_url"&gt;Credly Badge&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.credly.com/users/alexhedley/badges"&gt;Credly Profile&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is a paid course from AWS that uses gamification and hands on labs to reinforce learnings.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Part of AWS Skill Builder Individual subscription. Subscribe to get access to this and other subscriber-only benefits.&lt;br&gt;
$29.00 / month + VAT&lt;br&gt;
&lt;a href="https://explore.skillbuilder.aws/learn/signin"&gt;https://explore.skillbuilder.aws/learn/signin&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Work with scalable data lakes, data warehousing, big data analytics, and more in this role focused on modern data architecture and AWS analytics services.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="training-material"&gt;Training Material&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/training/learn-about/cloud-practitioner/"&gt;Training Material&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="links"&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/training/digital/aws-cloud-quest/"&gt;AWS Cloud Quest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://explore.skillbuilder.aws/learn/course/external/view/elearning/7636/cloud-quest"&gt;Cloud Quest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	<entry>
		<id>https://alexhedley.github.io/blog/posts/blog-banner</id>
		<title>Blog Banner</title>
		<author>
			<name>alex-hedley</name>
		</author>
		<link href="https://alexhedley.github.io/blog/posts/blog-banner" />
		<link rel="enclosure" type="image" href="https://alexhedley.github.io/blog/images/banner.png" />
		<updated>2023-06-17T00:00:00Z</updated>
		<content>&lt;p&gt;Create a new banner image.&lt;/p&gt;
&lt;p&gt;Add a new property &lt;code&gt;"Image": "images/banner.png",&lt;/code&gt; to the &lt;code&gt;appsettings.json&lt;/code&gt;&lt;/p&gt;
&lt;!--?# IncludeCode "./../../appsettings.json" /?--&gt;
&lt;p&gt;The publish.&lt;/p&gt;
&lt;p&gt;I took the banner from my website: &lt;a href="https://www.alexhedley.com/"&gt;https://www.alexhedley.com/&lt;/a&gt;, might need to create a new one to handle positioning of the text better, but it's not the default anymore.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/blog_banner.png" alt="Original Blog Banner" title="Original Blog Banner"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://alexhedley.github.io/blog/images/blog_banner_new.png" alt="Updated Blog Banner" title="Updated Blog Banner"&gt;&lt;/p&gt;
</content>
		<summary>Adding a custom banner image to the blog.</summary>
	</entry>
	<entry>
		<id>https://alexhedley.github.io/blog/posts/talk-beginners-guide-to-api-specs</id>
		<title>🎙️ Beginners Guide to API Specs - Part 1</title>
		<author>
			<name>alex-hedley</name>
		</author>
		<link href="https://alexhedley.github.io/blog/posts/talk-beginners-guide-to-api-specs" />
		<link rel="enclosure" type="image" href="https://alexhedley.github.io/blog/images/banner.png" />
		<updated>2023-06-15T00:00:00Z</updated>
		<content>&lt;!-- Beginners Guide to API Specs - Part 1 --&gt;
&lt;p&gt;I work in cross discipline teams and the Product Delivery members keep us Developers on track, writing up User Stories, managing our ceremonies etc. We often talk a lot about APIs and it's prob not something they are interested in :p.
This talk was to demystify a &lt;a href="http://swagger.io/"&gt;swagger&lt;/a&gt; spec, break it down into what it is, what it does, and how we use them in our day to day jobs.&lt;/p&gt;
&lt;p&gt;🗓️ June 15, 2023&lt;/p&gt;
&lt;!-- 📼  --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://alex-hedley.github.io/talk-beginners-guide-to-api-specs/"&gt;Presentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alex-hedley/talk-beginners-guide-to-api-specs"&gt;Presentation Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://alex-hedley.github.io/talks/"&gt;Talks Site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alex-hedley/talks"&gt;Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
		<summary>How to read and use an API spec.</summary>
	</entry>
	<entry>
		<id>https://alexhedley.github.io/blog/posts/terminal-build-output</id>
		<title>Terminal Build Output</title>
		<author>
			<name>AlexHedley</name>
		</author>
		<link href="https://alexhedley.github.io/blog/posts/terminal-build-output" />
		<link rel="enclosure" type="image" href="https://alexhedley.github.io/blog/images/banner.png" />
		<updated>2023-06-09T00:00:00Z</updated>
		<content>&lt;p&gt;&lt;code&gt;dotnet build /tl&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-preview-4/#msbuild-new-modern-terminal-build-output"&gt;MSBuild: New, modern terminal build output&lt;/a&gt;
&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-preview-4/"&gt;Announcing .NET 8 Preview 4&lt;/a&gt; Jon Douglas - May 16th, 2023&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dotnet/msbuild/issues/8370"&gt;MSBuild LiveLogger keeps users informed about their build and delights new users #8370&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="others"&gt;Others&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;New Terminal logger for .NET 8
From Steven Giesel
&lt;a href="https://steven-giesel.com/blogPost/f6e0accf-9493-4cc4-8992-e8300e6b0cbc"&gt;https://steven-giesel.com/blogPost/f6e0accf-9493-4cc4-8992-e8300e6b0cbc&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;dotnet build --tl&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
		<summary>&lt;p&gt;&lt;code&gt;dotnet build /tl&lt;/code&gt;&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>https://alexhedley.github.io/blog/posts/migrated-blog</id>
		<title>Migrated Blog</title>
		<author>
			<name>alex-hedley</name>
		</author>
		<link href="https://alexhedley.github.io/blog/posts/migrated-blog" />
		<link rel="enclosure" type="image" href="https://alexhedley.github.io/blog/posts/images/statiq-web.svg" />
		<updated>2023-06-09T00:00:00Z</updated>
		<content>&lt;p&gt;A couple of weeks ago I finally decided to migrate my Blog to &lt;a href="https://www.statiq.dev/web"&gt;Statiq Web&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Statiq Web is a powerful static web site generation toolkit suitable for most use cases. It's built on top of &lt;a href="https://www.statiq.dev/framework"&gt;Statiq Framework&lt;/a&gt; so you can always extend or customize it beyond those base capabilities as well.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It's predecessor was &lt;a href="https://wyam.io/"&gt;Wyam&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I wanted to use a .NET tool to create my blog as you know my passion for .NET, so the journey began.&lt;/p&gt;
&lt;p&gt;My blog(s) have existed in a number of formats. The first one was made in about 2010 using Classic ASP and a &lt;a href="https://www.microsoft.com/en-gb/microsoft-365/access"&gt;Microsoft Access&lt;/a&gt;. I'd been learning this on &lt;a href="https://www.599cd.com/"&gt;599CD&lt;/a&gt; so was putting it into practice. A few years later I started a &lt;img src="https://alexhedley.github.io/images/wordpress.png" alt="Wordpress" title="Wordpress"&gt; Wordpress blog at &lt;a href="https://alexhedley.wordpress.com/"&gt;https://alexhedley.wordpress.com/&lt;/a&gt;. This contained a majority of my iOS and Android journey. I used &lt;a href="https://gist.github.com/alexhedley"&gt;gist&lt;/a&gt; to host a lot of the code as it has support for that. Then I moved over to &lt;a href="https://github.com/barryclark/jekyll-now"&gt;Jekyll Now&lt;/a&gt; as I started hosting on GitHub. As these were already in &lt;a href="https://daringfireball.net/projects/markdown/syntax"&gt;Markdown&lt;/a&gt; it was just a couple of attribute changes and they were ready. Next I tackled my original blog. I'd exported the data from the db as &lt;code&gt;json&lt;/code&gt; and was hosting it as a simple &lt;a href="https://angularjs.org/"&gt;AngularJS&lt;/a&gt; app just so it wasn't lost, hadn't really put any effort into styling and as there were only a few posts I manually converted the posts needed to md. Next was the fun one! &lt;img src="https://alexhedley.github.io/images/wordpress.png" alt="Wordpress" title="Wordpress"&gt; Wordpress. I exported my existing data following the steps on &lt;a href="https://wordpress.com/support/export/"&gt;Export Your WordPress.com Site&lt;/a&gt;. I then needed a way to convert this output to Markdown. I tried this a few years back and couldn't get it working but when I looked again I found: &lt;a href="https://github.com/lonekorean/wordpress-export-to-markdown"&gt;wordpress-export-to-markdown&lt;/a&gt;. It has a nice little guided tour of steps and then I got my output. The images were also included so this meant just moving them over to the new repo. Some of the attributes were different so an update to those and I was good to go.&lt;/p&gt;
&lt;p&gt;I've got all the data now I need to setup the &lt;strong&gt;Statiq.Web&lt;/strong&gt; project. There's a &lt;a href="https://www.statiq.dev/web"&gt;Quick Start&lt;/a&gt; on the main page.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dotnet new console --name MySite&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd MySite&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dotnet add package Statiq.Web --version 1.0.0-beta.57&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Check for the latest version: &lt;a href="https://www.nuget.org/packages/Statiq.Web/1.0.0-beta.57"&gt;nuget - Statiq.Web&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Update &lt;a href="https://alexhedley.github.io/src/Program.cs"&gt;Program.cs&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;using System.Threading.Tasks;
using Statiq.App;
using Statiq.Web;

return await Bootstrapper
  .Factory
  .CreateWeb(args)
  .RunAsync();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;mkdir input&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;touch index.md&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-md"&gt;Title: My First Statiq page
---
# Hello World!

Hello from my first Statiq page.

Testing
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;dotnet run&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dotnet run -- preview&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;http://localhost:5080&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Theme&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd src&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git submodule add https://github.com/statiqdev/CleanBlog.git theme&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If you want to make any changes to the theme you might want to copy this locally.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Settings&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;appsettings.json&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Update the &lt;code&gt;"LinkRoot": "/blog",&lt;/code&gt; if you're not hosting on your &lt;em&gt;github.io&lt;/em&gt; root.&lt;/p&gt;
&lt;p&gt;Next step was adding extra functionality. I ❤ &lt;a href="https://mermaid.js.org/"&gt;Mermaid&lt;/a&gt; and wanted a way to support this. Now came the issue, I found another blog generating it from a separate md file and converting it to a picture, this was all done as a build step. As it's a static site this really should be the way I do it, but then when you link it to your page you have to know the filename before it's generated and it won't preview before hand. I instead opted for adding the js and doing it dynamically, see &lt;a href="https://alexhedley.github.io/blog/mermaid"&gt;Mermaid&lt;/a&gt; for more info on how.&lt;/p&gt;
&lt;p&gt;In other SSG I've used a tab group to display information, for example in &lt;a href="https://www.mfractor.com/"&gt;MFractor&lt;/a&gt;, see &lt;a href="https://docs.mfractor.com/android/tools/open-android-manifest/"&gt;Open Android Manifest&lt;/a&gt; (&lt;a href="https://github.com/mfractor/mfractor.github.io/blob/docs/docs/android/tools/open-android-manifest.md"&gt;Source&lt;/a&gt;). It uses the &lt;a href="https://squidfunk.github.io/mkdocs-material/reference/content-tabs/"&gt;Content tabs&lt;/a&gt; feature of &lt;a href="https://squidfunk.github.io/mkdocs-material/"&gt;Material for MkDocs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To use this just add the &lt;a href="https://www.nuget.org/packages/Devlead.Statiq"&gt;nuget&lt;/a&gt; then in the page you wish to add the &lt;code&gt;tabs&lt;/code&gt; syntax.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;?# TabGroup ?&amp;gt;
&amp;lt;?*
tabs:
  - name: Tab One
    content: |
    ...
  - name: Tab Two
    content: |
    ...
?&amp;gt;
&amp;lt;?#/ TabGroup ?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I prefer this over others as it's really easy to see what is happening.
&lt;a href="https://dotnet.github.io/docfx/"&gt;docfx&lt;/a&gt; uses a &lt;code&gt;md&lt;/code&gt; syntax which keeps it consistent but then previewers have a hard time with this.&lt;/p&gt;
&lt;p&gt;Another really handy plugin is &lt;code&gt;IncludeCode&lt;/code&gt;. This could be used instead of hosting as a &lt;a href="https://gist.github.com/alexhedley"&gt;gist&lt;/a&gt; or including large amounts of code in the post. You could also reference code from a single place and only have to update it once.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;?# IncludeCode "./../_head.cshtml" /?&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;src/input/_head.cshtml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I was getting decent analytics on my WP site and prob had it on others so I've added that here too. Just a few lines of code in your &lt;code&gt;src/input/_scripts.cshtml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Another thing I wanted to do was keep the commit history of when I wrote the posts, so I did this manually with:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;GIT_COMMITTER_DATE="Mon 20 Aug 2018 20:19:19 BST" git commit --amend --no-edit --date "Mon 20 Aug 2018 20:19:19 BST"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Finally as usual I needed a way to build and deploy so I used GitHub Actions and GitHub Pages, there are links below and you can see the source of this blog for exact steps.&lt;/p&gt;
&lt;p&gt;There are other updates I'm planning on adding like Search, a Header image etc, so check those out in the future.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id="mermaid"&gt;Mermaid&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://alexhedley.github.io/blog/mermaid"&gt;Mermaid&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.dpvreony.com/articles/mermaid-with-statiq/"&gt;Using Mermaid diagrams with Statiq.&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dpvreony/article-statiq-mermaid"&gt;repo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://blog.beckshome.com/2022/09/mermaid-in-statiq"&gt;Mermaid Diagrams in Statiq&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/thbst16/dotnet-statiq-beckshome-blog/blob/main/input/posts/mermaid-in-statiq.md"&gt;code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/ociaw/StatiqMermaid"&gt;StatiqMermaid Repo&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.nuget.org/packages/Ociaw.StatiqMermaid/0.1.0-beta.2"&gt;nuget&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id="plugins"&gt;Plugins&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.nuget.org/packages/Devlead.Statiq"&gt;nuget - Devlead.Statiq&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.devlead.se/posts/2021/2021-04-09-devlead-statiq-part1-tabs"&gt;Devlead.Statiq - Part 1 - Tabs&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.devlead.se/posts/2021/2021-04-10-devlead-statiq-part2-theme-from-uri"&gt;Devlead.Statiq - Part 2 - Theme from external web resource&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.devlead.se/posts/2021/2021-04-11-devlead-statiq-part3-includecode"&gt;Devlead.Statiq - Part 3 - IncludeCode 🤺&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id="links"&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.devlead.se/"&gt;devlead&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/devlead/devlead.se"&gt;Source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.devlead.se/posts/2021/2021-04-09-devlead-statiq-part1-tabs"&gt;Devlead.Statiq - Part 1 - Tabs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.techwatching.dev/"&gt;Alexandre Nédélec&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/TechWatching/techwatching.dev"&gt;Source&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://beckshome.com/"&gt;Thomas Beck&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/thbst16/dotnet-statiq-beckshome-blog"&gt;Source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://beckshome.com/2022/09/beckshome-on-statiq"&gt;Beckshome on Statiq&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://thefreezeteam.com/"&gt;The Freeze Team&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/TheFreezeTeam/TheFreezeTeamBlog/tree/master/Source/TheFreezeTeamBlog"&gt;Source&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://blog.structed.me/"&gt;Structed&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/structed"&gt;https://github.com/structed&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://wellsb.com/csharp/"&gt;C# Tutorials Blog&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bradwellsb/statiq-blog-boilerplate"&gt;Source&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="config"&gt;Config&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.statiq.dev/guide/configuration/settings"&gt;Settings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.statiq.dev/guide/configuration/web-settings"&gt;Web Settings&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="deploy"&gt;Deploy&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.statiq.dev/guide/deployment/github-pages"&gt;GitHub Pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://forloop.co.uk/blog/deploying-statiq-web-to-github-pages"&gt;Deploying Statiq Web to GitHub Pages&lt;/a&gt; 15 September 2022 by Russ Cam&lt;/li&gt;
&lt;li&gt;&lt;a href="https://thefreezeteam.com/posts/steven-t-cramer/2022/09/23/statiq-github-pages"&gt;Build and deploy a Statiq site to Github Pages in 5 min&lt;/a&gt; FRIDAY, 23 SEPTEMBER 2022 Steven T. Cramer&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="legacy"&gt;Legacy&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AlexHedley/blog_legacy"&gt;https://github.com/AlexHedley/blog_legacy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AlexHedley/wordpress"&gt;https://github.com/AlexHedley/wordpress&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AlexHedley/blog_2020"&gt;https://github.com/AlexHedley/blog_2020&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
		<summary>The journey to a new blog platform.</summary>
	</entry>
</feed>